/* Generated by the Nim Compiler v0.19.9 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI4262 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI204053 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI204049 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI4250 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI207261 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI26395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26391 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26387 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26383 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26379 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26375 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26371 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26367 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26363 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26359 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26355 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26351 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26347 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26343 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26339 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26335 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26331 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26327 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26323 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26319 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26204 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI26262 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI26260 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI26218 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI26452 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI26448 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI26222 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI26220 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI26450 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI4403 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI151294 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI151289 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI203073 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI4258 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4242 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4246 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI16344 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI4208 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4318 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI4312 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI4226 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4228 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4252 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4254 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI4254 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4254.node = NNI4254;
var NNI4252 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4252.node = NNI4252;
var NNI4228 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4228.node = NNI4228;
NTI4312.base = NTI4226;
NTI4318.base = NTI4226;
var NNI4226 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI4312, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI114, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI4318, name: "up", sons: null}]};
NTI4226.node = NNI4226;
var NNI4208 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4208.node = NNI4208;
NTI4226.base = NTI4208;
NTI4228.base = NTI4226;
NTI4252.base = NTI4228;
NTI4254.base = NTI4252;
var NNI16344 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI16344.node = NNI16344;
var NNI4246 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4246.node = NNI4246;
var NNI4242 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4242.node = NNI4242;
NTI4242.base = NTI4228;
NTI4246.base = NTI4242;
var NNI4258 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4258.node = NNI4258;
NTI4258.base = NTI4228;
var NNI151294 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI151294.node = NNI151294;
var NNI4403 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4403.node = NNI4403;
NTI4403.base = NTI4208;
NTI151294.base = NTI4403;
NTI151289.base = NTI151294;
NTI203073.base = NTI151289;
NTI26448.base = NTI26220;
NTI26452.base = NTI26220;
var NNI26218 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI26218, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI26218, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI26218, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI26218, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI26218, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI26218, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI26218, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI26218, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI26218, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI26218, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI26218, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI26218, name: "NotationNode", len: 0, sons: null}}};
NTI26218.node = NNI26218;
var NNI26262 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI140, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI140, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI140, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI140, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI140, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI140, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI140, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI140, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI140, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI140, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI140, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI140, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI140, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI140, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI140, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI140, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI140, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI140, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI140, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI140, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI140, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI140, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI140, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI140, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI140, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI140, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI140, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI140, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI140, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI140, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI140, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI140, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI140, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI140, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI140, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI140, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI140, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI140, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI140, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI140, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI140, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI140, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI140, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI140, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI140, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI140, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI140, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI140, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI140, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI140, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI140, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI140, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI140, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI140, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI140, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI140, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI140, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI140, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI140, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI140, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI140, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI140, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI140, name: "overflowY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI140, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI140, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI140, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI140, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI140, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI140, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI140, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI140, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI140, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI140, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI140, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI140, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI140, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI140, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI140, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI140, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI140, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI140, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI140, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI140, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI140, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI140, name: "textTransform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI140, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI140, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI140, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI140, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI140, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI26262.node = NNI26262;
NTI26262.base = NTI4208;
NTI26260.base = NTI26262;
var NNI26222 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI26448, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI26450, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI26452, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI140, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI26220, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI26220, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI26220, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI140, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI26218, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI140, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI26220, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI26220, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI140, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI26260, name: "style", sons: null}]};
NTI26222.node = NNI26222;
var NNI26204 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI26319, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI26323, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI26327, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI26331, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI26335, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI26339, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI26343, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI26347, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI26351, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI26355, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI26359, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI26363, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI26367, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI26371, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI26375, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI26379, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI26383, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI26387, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI26391, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI26395, name: "onunload", sons: null}]};
NTI26204.node = NNI26204;
NTI26204.base = NTI4208;
NTI26222.base = NTI26204;
NTI26220.base = NTI26222;
NTI26450.base = NTI26220;
NTI207261.base = NTI26220;
var NNI4250 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4250.node = NNI4250;
NTI4250.base = NTI4228;
NTI204049.base = NTI26220;
NTI204053.base = NTI26220;
var NNI4262 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4262.node = NNI4262;
NTI4262.base = NTI4228;

function makeNimstrLit(c_17224) {
		  var ln = c_17224.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_17224.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_18230, src_18231, ti_18232) {
	var result_18643 = null;

		switch (ti_18232.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_18201(ti_18232))) {
			result_18643 = src_18231;
			}
			else {
				result_18643 = [src_18231[0], src_18231[1]];
			}
			
			break;
		case 19:
			      if (dest_18230 === null || dest_18230 === undefined) {
        dest_18230 = {};
      }
      else {
        for (var key in dest_18230) { delete dest_18230[key]; }
      }
      for (var key in src_18231) { dest_18230[key] = src_18231[key]; }
      result_18643 = dest_18230;
    
			break;
		case 18:
		case 17:
			if (!((ti_18232.base == null))) {
			result_18643 = nimCopy(dest_18230, src_18231, ti_18232.base);
			}
			else {
			if ((ti_18232.kind == 17)) {
			result_18643 = (dest_18230 === null || dest_18230 === undefined) ? {m_type: ti_18232} : dest_18230;
			}
			else {
				result_18643 = (dest_18230 === null || dest_18230 === undefined) ? {} : dest_18230;
			}
			}
			nimCopyAux(result_18643, src_18231, ti_18232.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_18231 === null) {
        result_18643 = null;
      }
      else {
        if (dest_18230 === null || dest_18230 === undefined) {
          dest_18230 = new Array(src_18231.length);
        }
        else {
          dest_18230.length = src_18231.length;
        }
        result_18643 = dest_18230;
        for (var i = 0; i < src_18231.length; ++i) {
          result_18643[i] = nimCopy(result_18643[i], src_18231[i], ti_18232.base);
        }
      }
    
			break;
		case 28:
			      if (src_18231 !== null) {
        result_18643 = src_18231.slice(0);
      }
    
			break;
		default: 
			result_18643 = src_18231;
			break;
		}

	return result_18643;

}

function arrayConstr(len_18704, value_18705, typ_18706) {
		    var result = new Array(len_18704);
    for (var i = 0; i < len_18704; ++i) result[i] = nimCopy(null, value_18705, typ_18706);
    return result;
  

	
}

function cstrToNimstr(c_17241) {
		  var ln = c_17241.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_17241.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_17241.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_17258) {
		  if (s_17258 === null) return "";
  var len = s_17258.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_17258[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_17258[i] < 128)
      asciiPart[i] = fcc(s_17258[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_16818, ename_16819) {
		e_16818.name = ename_16819;
		if ((excHandler == 0)) {
		unhandledException(e_16818);
		}
		
		e_16818.trace = nimCopy(null, raw_write_stack_trace_16641(), NTI138);
		throw e_16818;

	
}

function subInt(a_17621, b_17622) {
		    var result = a_17621 - b_17622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function addInt(a_17603, b_17604) {
		    var result = a_17603 + b_17604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_18723, a_18724, b_18725) {
			var Tmp1;

	var result_18726 = 0;

	BeforeRet: do {
			if (!(a_18724 <= i_18723)) Tmp1 = false; else {				Tmp1 = (i_18723 <= b_18725);			}		if (Tmp1) {
		result_18726 = i_18723;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_18726;

}

function addChar(x_18875, c_18876) {
		x_18875.push(c_18876);

	
}

function nimMax(a_17958, b_17959) {
		var Tmp1;

	var result_17960 = 0;

	BeforeRet: do {
		if ((b_17959 <= a_17958)) {
		Tmp1 = a_17958;
		}
		else {
		Tmp1 = b_17959;
		}
		
		result_17960 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_17960;

}

function nimMin(a_17940, b_17941) {
		var Tmp1;

	var result_17942 = 0;

	BeforeRet: do {
		if ((a_17940 <= b_17941)) {
		Tmp1 = a_17940;
		}
		else {
		Tmp1 = b_17941;
		}
		
		result_17942 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_17942;

}

function mnewString(len_17275) {
		    return new Array(len_17275);
  

	
}

function chckRange(i_18742, a_18743, b_18744) {
			var Tmp1;

	var result_18745 = 0;

	BeforeRet: do {
			if (!(a_18743 <= i_18742)) Tmp1 = false; else {				Tmp1 = (i_18742 <= b_18744);			}		if (Tmp1) {
		result_18745 = i_18742;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_18745;

}
var nimvm_7795 = false;
var nim_program_result = 0;
var global_raise_hook_14418 = [null];
var local_raise_hook_14423 = [null];
var out_of_mem_hook_14426 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var object_id_144245 = [0];

function tag(w_199377, o_199378, t_199379) {
	var result_199380 = null;

	var F={procname:"litz.tag",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 109;
		result_199380 = eval("w_199377(o_199378)`" + t_199379.replace("this", "o_199378") + "`");
	framePtr = F.prev;

	return result_199380;

}

function tagCustomElement(w_199405, o_199406, t_199407) {
	var result_199408 = null;

	var F={procname:"litz.tagCustomElement",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 113;
		result_199408 = eval("w_199405`" + o_199406.replace("this", "t_199407") + "`");
	framePtr = F.prev;

	return result_199408;

}

function tagTempl(w_199432, t_199433) {
	var result_199434 = null;

	var F={procname:"litz.tagTempl",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 117;
		result_199434 = eval("(w_199432)`" + t_199433 + "`");
	framePtr = F.prev;

	return result_199434;

}

function doc_199484(n_199486) {
	var result_199487 = null;

	var F={procname:"litz.doc",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 124;
		result_199487 = (((n_199486.ownerDocument) || (n_199486)));
	framePtr = F.prev;

	return result_199487;

}

function fragment_199530(n_199532) {
	var result_199533 = null;

	var F={procname:"litz.fragment",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 130;
		result_199533 = doc_199484(n_199532).createDocumentFragment();
	framePtr = F.prev;

	return result_199533;

}

function create_199579(n_199583, t_199585) {
	var result_199586 = null;

	var F={procname:"create.create",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 127;
		result_199586 = doc_199484(n_199583).createElement(t_199585);
	framePtr = F.prev;

	return result_199586;

}

function HEX3Aanonymous_199623() {
	var result_199625 = null;

	var F={procname:"litz.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 154;
		result_199625 = (this).replace(new RegExp("^\\s+|\\s+$", "g"), "");
	framePtr = F.prev;

	return result_199625;

}
var almost_everything_199565 = (("[^ " + " \\f\\n\\r\\t") + "\\\\/>\"\\'=]+");
var attr_name_199566 = ((("[ " + " \\f\\n\\r\\t") + "]+") + almost_everything_199565);
var tag_name_199567 = "<([A-Za-z]+[A-Za-z0-9:_-]*)((?:";
var attr_partials_199568 = (("(?:=(?:\\'[^\\']*?\\'|\"[^\"]*?\"|<[^>]*?>|" + almost_everything_199565) + "))?)");
var connected_199569 = makeNimstrLit("connected");
var disconnected_199570 = (makeNimstrLit("dis")).concat(connected_199569);
var g_199571 = document.defaultView;
var uid_199572 = ("_litz: " + (Math.random() * new Date() | 0));
var uidc_199573 = (("<!--" + uid_199572) + "-->");
var test_fragment_199574 = fragment_199530(document);
var has_content_199601 = "content" in create_199579(document, "template");
var has_append_199602 = "append" in test_fragment_199574;
var has_import_node_199603 = "importNode" in document;
var should_use_text_content_199604 = new RegExp("^style|textarea$", "i");
var trim_199667 = (((uid_199572).trim || (HEX3Aanonymous_199623)));

function is_fat_pointer_18201(ti_18203) {
	var result_18204 = false;

	BeforeRet: do {
		result_18204 = !((ConstSet1[ti_18203.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_18204;

}

function nimCopyAux(dest_18235, src_18236, n_18238) {
		switch (n_18238.kind) {
		case 0:
			break;
		case 1:
			      dest_18235[n_18238.offset] = nimCopy(dest_18235[n_18238.offset], src_18236[n_18238.offset], n_18238.typ);
    
			break;
		case 2:
			L1: do {
				var i_18624 = 0;
				var colontmp__201478 = 0;
				colontmp__201478 = (n_18238.len - 1);
				var res_201480 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_201480 <= colontmp__201478)) break L3;
							i_18624 = res_201480;
							nimCopyAux(dest_18235, src_18236, n_18238.sons[i_18624]);
							res_201480 += 1;
						}
				} while(false);
			} while(false);
			break;
		case 3:
			      dest_18235[n_18238.offset] = nimCopy(dest_18235[n_18238.offset], src_18236[n_18238.offset], n_18238.typ);
      for (var i = 0; i < n_18238.sons.length; ++i) {
        nimCopyAux(dest_18235, src_18236, n_18238.sons[i][1]);
      }
    
			break;
		}

	
}

function add_14438(x_14441, x_14441_Idx, y_14442) {
		      if (x_14441[x_14441_Idx] === null) { x_14441[x_14441_Idx] = []; }
      var off = x_14441[x_14441_Idx].length;
      x_14441[x_14441_Idx].length += y_14442.length;
      for (var i = 0; i < y_14442.length; ++i) {
        x_14441[x_14441_Idx][off+i] = y_14442.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_16339(f_16341) {
					var Tmp3;

	var result_16342 = [null];

		var it_16350 = f_16341;
		var i_16352 = 0;
		var total_16354 = 0;
		var temp_frames_16361 = arrayConstr(64, {Field0: null, Field1: 0}, NTI16344);
		L1: do {
				L2: while (true) {
					if (!!((it_16350 == null))) Tmp3 = false; else {						Tmp3 = (i_16352 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_16361[i_16352].Field0 = it_16350.procname;
					temp_frames_16361[i_16352].Field1 = it_16350.line;
					i_16352 += 1;
					total_16354 += 1;
					it_16350 = it_16350.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_16350 == null))) break L5;
					total_16354 += 1;
					it_16350 = it_16350.prev;
				}
		} while(false);
		result_16342[0] = nimCopy(null, [], NTI138);
		if (!((total_16354 == i_16352))) {
		if (result_16342[0] != null) { result_16342[0] = (result_16342[0]).concat(makeNimstrLit("(")); } else { result_16342[0] = makeNimstrLit("("); };
		if (result_16342[0] != null) { result_16342[0] = (result_16342[0]).concat(cstrToNimstr(((total_16354 - i_16352))+"")); } else { result_16342[0] = cstrToNimstr(((total_16354 - i_16352))+"").slice(); };
		if (result_16342[0] != null) { result_16342[0] = (result_16342[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_16342[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_16624 = 0;
			var colontmp__201488 = 0;
			colontmp__201488 = (i_16352 - 1);
			var res_201494 = colontmp__201488;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_201494)) break L8;
						j_16624 = res_201494;
						add_14438(result_16342, 0, temp_frames_16361[j_16624].Field0);
						if ((0 < temp_frames_16361[j_16624].Field1)) {
						if (result_16342[0] != null) { result_16342[0] = (result_16342[0]).concat(makeNimstrLit(", line: ")); } else { result_16342[0] = makeNimstrLit(", line: "); };
						if (result_16342[0] != null) { result_16342[0] = (result_16342[0]).concat(cstrToNimstr((temp_frames_16361[j_16624].Field1)+"")); } else { result_16342[0] = cstrToNimstr((temp_frames_16361[j_16624].Field1)+"").slice(); };
						}
						
						if (result_16342[0] != null) { result_16342[0] = (result_16342[0]).concat(makeNimstrLit("\x0A")); } else { result_16342[0] = makeNimstrLit("\x0A"); };
						res_201494 -= 1;
					}
			} while(false);
		} while(false);

	return result_16342[0];

}

function raw_write_stack_trace_16641() {
	var result_16643 = null;

		if (!((framePtr == null))) {
		result_16643 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A")).concat(aux_write_stack_trace_16339(framePtr)), NTI138);
		}
		else {
			result_16643 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_16643;

}

function unhandledException(e_16705) {
		var buf_16706 = [[]];
		if (!(((e_16705.message != null ? e_16705.message.length : 0) == 0))) {
		if (buf_16706[0] != null) { buf_16706[0] = (buf_16706[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_16706[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_16706[0] != null) { buf_16706[0] = (buf_16706[0]).concat(e_16705.message); } else { buf_16706[0] = e_16705.message.slice(); };
		}
		else {
		if (buf_16706[0] != null) { buf_16706[0] = (buf_16706[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_16706[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_16706[0] != null) { buf_16706[0] = (buf_16706[0]).concat(makeNimstrLit(" [")); } else { buf_16706[0] = makeNimstrLit(" ["); };
		add_14438(buf_16706, 0, e_16705.name);
		if (buf_16706[0] != null) { buf_16706[0] = (buf_16706[0]).concat(makeNimstrLit("]\x0A")); } else { buf_16706[0] = makeNimstrLit("]\x0A"); };
		if (buf_16706[0] != null) { buf_16706[0] = (buf_16706[0]).concat(raw_write_stack_trace_16641()); } else { buf_16706[0] = raw_write_stack_trace_16641().slice(); };
		var cbuf_16801 = toJSStr(buf_16706[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_16801);
  }
  else {
    throw cbuf_16801;
  }
  

	
}

function raiseOverflow() {
		var e_17064 = null;
		e_17064 = {m_type: NTI4246, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_17064.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_17064.parent = null;
		raiseException(e_17064, "OverflowError");

	
}

function new_map_199843() {

		function inner_199881() {

				function HEX3Aanonymous_200001(o_200003) {
					var result_200004 = null;

					var F={procname:"inner.:anonymous",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
					framePtr = F;
						F.line = 193;
						result_200004 = values_199865[keys_199855.indexOf(o_200003)];
					framePtr = F.prev;

					return result_200004;

				}

				function HEX3Aanonymous_200401(k_200403, v_200404) {
					var F={procname:"inner.:anonymous",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
					framePtr = F;
						F.line = 194;
						values_199865[((subInt(keys_199855.push(k_200403), 1))|0)] = v_200404;
					framePtr = F.prev;

					
				}

			var result_199883 = null;

			var F={procname:"newMap.inner",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 423;
				var a_199884 = null;
				F.line = 424;
				a_199884 = {};
				F.line = 434;
				a_199884.get = HEX3Aanonymous_200001;
				F.line = 438;
				a_199884["invalid"] = HEX3Aanonymous_200401;
				F.line = 443;
				result_199883 = a_199884;
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_199883;

		}

	var result_199845 = null;

	var F={procname:"litz.newMap",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 189;
		var keys_199855 = ([]);
		F.line = 190;
		var values_199865 = ([]);
		F.line = 192;
		result_199845 = inner_199881();
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_199845;

}

function new_template_map_200464() {
	var result_200466 = null;

	var F={procname:"litz.newTemplateMap",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 198;
++excHandler;
		try {
		F.line = 200;
		var wm_200467 = new WeakMap();
		F.line = 201;
		var fo_200477 = Object.freeze(([]));
		F.line = 203;
		wm_200467.set(fo_200477, (true));
		if ((wm_200467.get(fo_200477) == null)) {
		F.line = 2947;
		var e_200501 = null;
		F.line = 2948;
		e_200501 = {m_type: NTI4254, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 205;
		e_200501.message = nimCopy(null, makeNimstrLit("Frozen object key not found."), NTI138);
		F.line = 2943;
		e_200501.parent = null;
		F.line = 205;
		raiseException(e_200501, "KeyError");
		}
		
		F.line = 206;
		result_200466 = wm_200467;
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
		framePtr = F;
		F.line = 208;
		result_200466 = (new (g_199571.Map || new_map_199843()));
		lastJSError = prevJSError;
		} finally {
		framePtr = F;
		}
	framePtr = F.prev;

	return result_200466;

}

function inner_200601() {

		function HEX3Aanonymous_201001(i_201003, cb_201004) {
			var F={procname:"inner.:anonymous",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
			framePtr = F;
				if ((i_201003.indexOf("-") < 0)) {
				if (!(((i_201003 in intents_200575[0])))) {
				F.line = 239;
				length_200593[0] = ((keys_200591[0].push(i_201003))|0);
				}
				
				F.line = 240;
				intents_200575[0].set(i_201003, cb_201004);
				}
				else {
					F.line = 242;
				attributes_200574[0].set(i_201003, cb_201004);
				}
				
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_201201(o_201203, cb_201204) {
			var result_201205 = null;

			var F={procname:"inner.:anonymous",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
			framePtr = F;
				L1: do {
					F.line = 244;
					var i_201215 = 0;
					F.line = 3668;
					var i_201504 = 0;
					L2: do {
						F.line = 3669;
							L3: while (true) {
							if (!(i_201504 < length_200593[0])) break L3;
								F.line = 3670;
								i_201215 = i_201504;
								F.line = 245;
								var key_201216 = keys_200591[0][i_201215];
								if ((has_own_property_200581[0].call((o_201203), (key_201216)))) {
								F.line = 247;
								result_201205 = (intents_200575[0][key_201216])(o_201203[key_201216], cb_201204);
								}
								
								F.line = 3671;
								i_201504 = addInt(i_201504, 1);
							}
					} while(false);
				} while(false);
			framePtr = F.prev;

			return result_201205;

		}

	var result_200603 = null;

	var F={procname:"litz.inner",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 423;
		var a_200604 = null;
		F.line = 424;
		a_200604 = {};
		F.line = 434;
		a_200604.attributes = {};
		F.line = 434;
		a_200604.define = HEX3Aanonymous_201001;
		F.line = 434;
		a_200604.invoke = HEX3Aanonymous_201201;
		F.line = 443;
		result_200603 = a_200604;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_200603;

}

function inner_201385() {
	var result_201387 = null;

	var F={procname:"litz.inner",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 423;
		var a_201388 = null;
		F.line = 424;
		a_201388 = {};
		F.line = 443;
		result_201387 = a_201388;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_201387;

}

function HEX3Aanonymous_201306(to_string_201311) {

		function HEX3Aanonymous_201316(a_201318) {
			var result_201319 = false;

			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 251;
				result_201319 = (to_string_201311.call(a_201318) == ("[object Array]"));
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_201319;

		}

	var result_201315 = null;

	var F={procname:"litz.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 250;
		result_201315 = HEX3Aanonymous_201316;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_201315;

}
var Tmp2;

function HEX3Aanonymous_201444(kind_201446) {
	var result_201447 = null;

	var F={procname:"litz.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 261;
		result_201447 = document.createEvent("Event");
		F.line = 262;
		result_201447.initEvent(kind_201446, false, false);
	framePtr = F.prev;

	return result_201447;

}
var known_200551 = [new WeakMap()];
var components_200552 = [new WeakSet()];
var templates_200553 = [new_template_map_200464()];
var attr_seeker_200554 = [new RegExp((((((tag_name_199567 + attr_name_199566) + attr_partials_199568) + "+)([ ") + " \\f\\n\\r\\t") + "]*/?>)"), "g")];
var find_attributes_regex_200555 = [new RegExp((((("(" + attr_name_199566) + "=)([\\'\"]?)") + uidc_199573) + "\\\\2"), "gi")];
var self_closing_regex_200556 = [new RegExp((((((tag_name_199567 + attr_name_199566) + attr_partials_199568) + "*)([ ") + " \\f\\n\\r\\t") + "]*/>)"), "g")];
var void_elements_200557 = [new RegExp("^area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr$", "i")];
var not_observing_200558 = [true];
var new_event_200571 = [(g_199571["Event"])];
var attributes_200574 = [{}];
var intents_200575 = [{}];
var has_own_property_200581 = [intents_200575[0].hasOwnProperty];
var keys_200591 = [([])];
var length_200593 = [0];
var wires_200594 = [new WeakMap()];
var intent_201305 = [inner_200601()];
var is_object_array_201370 = [HEX3Aanonymous_201306];
var is_js_array_201437 = [((Array.isArray || (is_object_array_201370[0]((inner_201385().toString)))))];
++excHandler;
Tmp2 = framePtr;
try {
(new new_event_200571[0]("Event"));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
framePtr = Tmp2;
new_event_200571[0] = HEX3Aanonymous_201444;
lastJSError = prevJSError;
} finally {
framePtr = Tmp2;
}

function wire_child_nodes_203462(cn_203464) {
	var F={procname:"litz.wireChildNodes",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 419;
		this.childNodes = cn_203464;
		F.line = 420;
		this.length = cn_203464.length;
		F.line = 421;
		this.first = cn_203464[0];
		F.line = 422;
		this.last = cn_203464[subInt((this.length), 1)];
	framePtr = F.prev;

	
}

function raiseIndexError() {
		var e_17154 = null;
		e_17154 = {m_type: NTI4258, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_17154.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
		e_17154.parent = null;
		raiseException(e_17154, "IndexError");

	
}

function append_199689(n_199691, cn_199693) {
	var F={procname:"litz.append",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		if (has_append_199602) {
		(n_199691).append.apply((n_199691), (cn_199693));
		}
		else {
			L1: do {
				F.line = 165;
				var i_199747 = 0;
				F.line = 3667;
				var colontmp__203790 = 0;
				F.line = 165;
				colontmp__203790 = (cn_199693 != null ? cn_199693.length : 0);
				F.line = 3668;
				var i_203792 = 0;
				L2: do {
					F.line = 3669;
						L3: while (true) {
						if (!(i_203792 < colontmp__203790)) break L3;
							F.line = 3670;
							i_199747 = i_203792;
							F.line = 166;
							n_199691.appendChild(cn_199693[chckIndx(i_199747, 0, cn_199693.length+0-1)-0]);
							F.line = 3671;
							i_203792 = addInt(i_203792, 1);
						}
				} while(false);
			} while(false);
		}
		
	framePtr = F.prev;

	
}

function HEX3Aanonymous_203577() {
	var result_203579 = null;

	var F={procname:"litz.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 427;
		var df_203595 = fragment_199530((this.first));
		F.line = 428;
		append_199689(df_203595, (this.childNodes));
		F.line = 429;
		result_203579 = df_203595;
	framePtr = F.prev;

	return result_203579;

}

function HEX3Aanonymous_203653() {
	var result_203655 = null;

	var F={procname:"litz.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 435;
		var first_203671 = (this.first);
		F.line = 436;
		var last_203686 = (this.last);
		if (((this.length) == 2)) {
		F.line = 439;
		last_203686.parentNode.removeChild(last_203686);
		}
		else {
			F.line = 441;
			var rng_203701 = doc_199484(first_203671).createRange();
			rng_203701.setStartBefore((this.childNodes[1]));
			rng_203701.setEndAfter((last_203686));
		rng_203701.deleteContents();
		}
		
		F.line = 445;
		result_203655 = first_203671;
	framePtr = F.prev;

	return result_203655;

}
(wire_child_nodes_203462).prototype.insert = HEX3Aanonymous_203577;
(wire_child_nodes_203462).prototype.remove = HEX3Aanonymous_203653;

function tl_201507(t_201509) {

		function inner_201522() {
			var result_201524 = null;

			var F={procname:"TL.inner",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 423;
				var a_201525 = null;
				F.line = 424;
				a_201525 = {};
				F.line = 443;
				result_201524 = a_201525;
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_201524;

		}
			var Tmp1;
			var Tmp2;

				function inner_201577() {
					var result_201579 = null;

					var F={procname:"TL.inner",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
					framePtr = F;
					BeforeRet: do {
						F.line = 423;
						var a_201580 = null;
						F.line = 424;
						a_201580 = {};
						F.line = 443;
						result_201579 = a_201580;
						break BeforeRet;
					} while (false);
					framePtr = F.prev;

					return result_201579;

				}

		function inner_201649() {
			var result_201651 = null;

			var F={procname:"TL.inner",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 423;
				var a_201652 = null;
				F.line = 424;
				a_201652 = {};
				F.line = 443;
				result_201651 = a_201652;
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_201651;

		}

	var result_201510 = null;

	var F={procname:"litz.TL",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 266;
		var ua_201553 = cstrToNimstr(((g_199571.navigator || inner_201522()).userAgent));
		F.line = 267;
		var ffv_201554 = 0.0;
			if (!!((t_201509 == null))) Tmp2 = false; else {				Tmp2 = t_201509.propertyIsEnumerable("raw");			}			if (Tmp2) Tmp1 = true; else {				Tmp1 = ((new RegExp("Firefox\\/(\\d+)", "").test(((g_199571.navigator || inner_201577()).userAgent)) && ((((parseFloat(RegExp.$1))) < 5.5000000000000000e+01))));			}		if (Tmp1) {
		F.line = 272;
		var t_201666 = inner_201649();
		F.line = 273;
		var k_201667 = ("^" + t_201509.join("^"));
		if ((t_201666[k_201667] == null)) {
		F.line = 275;
		t_201666[k_201667] = t_201509;
		}
		
		F.line = 276;
		result_201510 = t_201666[k_201667];
		}
		else {
			F.line = 278;
			result_201510 = t_201509;
		}
		
	framePtr = F.prev;

	return result_201510;

}

function unique_201702(t_201704) {
	var result_201705 = null;

	var F={procname:"litz.unique",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 281;
		result_201705 = tl_201507(t_201704);
	framePtr = F.prev;

	return result_201705;

}

function update_one_207350() {
	var F={procname:"litz.updateOne",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 815;
			var i_207376 = 0;
			F.line = 3667;
			var colontmp__208355 = 0;
			F.line = 815;
			colontmp__208355 = (((arguments.length))|0);
			F.line = 3668;
			var i_208357 = 1;
			L2: do {
				F.line = 3669;
					L3: while (true) {
					if (!(i_208357 < colontmp__208355)) break L3;
						F.line = 3670;
						i_207376 = i_208357;
						F.line = 817;
						var p_207394 = (this[subInt(i_207376, 1)]);
						F.line = 818;
						var o_207395 = [arguments[i_207376]];
						F.line = 819;
						p_207394(o_207395, 0);
						F.line = 3671;
						i_208357 = addInt(i_208357, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function self_closing_place_201719(a_201721, b_201722, c_201723) {
		var Tmp1;

	var result_201724 = null;

	var F={procname:"litz.selfClosingPlace",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 284;
		if (void_elements_200557[0].test(b_201722)) {
		Tmp1 = a_201721;
		}
		else {
		Tmp1 = ((((("<" + b_201722) + c_201723) + "></") + b_201722) + ">");
		}
		
		result_201724 = Tmp1;
	framePtr = F.prev;

	return result_201724;

}

function html_fragment_199761(n_199763, h_199764) {
	var result_199765 = null;

	var F={procname:"litz.htmlFragment",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 169;
		var container_199777 = create_199579(n_199763, "template");
		if (has_content_199601) {
		F.line = 172;
		container_199777.innerHTML = h_199764;
		F.line = 173;
		result_199765 = container_199777.content;
		break BeforeRet;
		}
		else {
			F.line = 175;
			var content_199778 = fragment_199530(n_199763);
			if (new RegExp("^[^\\S]*?<(col(?:group)?|t(?:head|body|foot|r|d|h))", "i").test(h_199764)) {
			F.line = 178;
			var selector_199779 = RegExp.$1;
			F.line = 179;
			container_199777.innerHTML = (("<table>" + h_199764) + "</table>");
			F.line = 180;
			append_199689(content_199778, ([].slice.call((container_199777.querySelectorAll(selector_199779)))));
			}
			else {
				F.line = 182;
				container_199777.innerHTML = h_199764;
				F.line = 183;
				append_199689(content_199778, ([].slice.call((container_199777.childNodes))));
			}
			
			F.line = 185;
			result_199765 = content_199778;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_199765;

}

function replace_attributes_201738(a_201740, b_201741, c_201742) {
	var result_201743 = null;

	var F={procname:"litz.replaceAttributes",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 288;
		var c1_201744 = c_201742 || String.fromCharCode(34);
		F.line = 290;
		result_201743 = (((b_201741 + c1_201744) + uid_199572) + c1_201744);
	framePtr = F.prev;

	return result_201743;

}

function comments_201758(a_201760, b_201761, c_201762, d_201763) {
	var result_201764 = null;

	var F={procname:"litz.comments",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 293;
		result_201764 = ((("<" + b_201761) + c_201762.replace(find_attributes_regex_200555[0], (replace_attributes_201738))) + d_201763);
	framePtr = F.prev;

	return result_201764;

}

function create_fragment_201784(n_201786, html_201787) {
	var result_201788 = null;

	var F={procname:"litz.createFragment",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 296;
		result_201788 = html_fragment_199761(n_201786, html_201787.replace(attr_seeker_200554[0], (comments_201758)));
	framePtr = F.prev;

	return result_201788;

}

function prepend_201808(path_201810, parent_201811, n_201812) {
	var result_201813 = 0;

	var F={procname:"litz.prepend",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 299;
		result_201813 = (path_201810.unshift((path_201810.indexOf.call((parent_201811.childNodes), (n_201812)))));
	framePtr = F.prev;

	return result_201813;

}

function create_path_201876(n_201878) {
	var result_201879 = null;

	var F={procname:"litz.createPath",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 302;
		var path_201889 = ([]);
		F.line = 304;
		var parent_node_201890 = null;
		F.line = 306;
		switch (n_201878.nodeType) {
		case 1:
		case 11:
			F.line = 308;
			parent_node_201890 = n_201878;
			break;
		case 8:
			F.line = 310;
			parent_node_201890 = n_201878.parentNode;
			prepend_201808(path_201889, parent_node_201890, n_201878);
			break;
		default: 
			F.line = 313;
			parent_node_201890 = n_201878.ownerElement;
			break;
		}
		F.line = 315;
		var tn_201891 = parent_node_201890;
		F.line = 316;
		parent_node_201890 = parent_node_201890.parentNode;
		L1: do {
			F.line = 317;
				L2: while (true) {
				if (!!((parent_node_201890 == null))) break L2;
					prepend_201808(path_201889, parent_node_201890, tn_201891);
					F.line = 319;
					tn_201891 = parent_node_201890;
					F.line = 320;
					parent_node_201890 = parent_node_201890.parentNode;
				}
		} while(false);
		F.line = 322;
		result_201879 = path_201889;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_201879;

}

function create_path_obj_201916(t_201918, n_201919, name_201920) {

		function inner_201928() {
			var result_201930 = null;

			var F={procname:"createPathObj.inner",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 423;
				var a_201931 = null;
				F.line = 424;
				a_201931 = {};
				F.line = 434;
				a_201931.kind = t_201918;
				F.line = 434;
				a_201931.name = name_201920;
				F.line = 434;
				a_201931.node = n_201919;
				F.line = 434;
				a_201931.path = create_path_201876(n_201919);
				F.line = 443;
				result_201930 = a_201931;
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_201930;

		}

	var result_201921 = null;

	var F={procname:"litz.createPathObj",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 325;
		result_201921 = inner_201928();
	framePtr = F.prev;

	return result_201921;

}

function find_attributes_202681(n_202683, paths_202686, paths_202686_Idx, parts_202687) {
						var Tmp4;

	var F={procname:"litz.findAttributes",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 340;
		var cache_202688 = {};
		F.line = 341;
		var attributes_202695 = (n_202683.attributes);
		F.line = 342;
		var arr_202710 = [].slice.call((attributes_202695));
		F.line = 343;
		var remove_202720 = ([]);
		F.line = 344;
		var length_202735 = (arr_202710.length);
		L1: do {
			F.line = 346;
			var i_202745 = 0;
			F.line = 3667;
			var colontmp__208379 = 0;
			F.line = 346;
			colontmp__208379 = ((length_202735)|0);
			F.line = 3668;
			var i_208381 = 0;
			L2: do {
				F.line = 3669;
					L3: while (true) {
					if (!(i_208381 < colontmp__208379)) break L3;
						F.line = 3670;
						i_202745 = i_208381;
						F.line = 347;
						var attribute_202746 = arr_202710[i_202745];
						if (((attribute_202746.value) == uid_199572)) {
						F.line = 349;
						var name_202775 = (attribute_202746.name);
						if (!(name_202775 in cache_202688)) {
						F.line = 352;
						var real_name_202814 = (parts_202687.shift().replace((new RegExp("^(?:|[\\S\\s]*?\\s)(\\S+?)=['\"]?$", "")), ("$$1")));
						F.line = 353;
						cache_202688[name_202775] = (attributes_202695[real_name_202814] || attributes_202695[real_name_202814.toLowerCase()]);
						F.line = 354;
						if (paths_202686[paths_202686_Idx] != null) { paths_202686[paths_202686_Idx].push(create_path_obj_201916("attr", (Tmp4 = (cache_202688[name_202775]), Tmp4[0])[Tmp4[1]], real_name_202814)); } else { paths_202686[paths_202686_Idx] = [create_path_obj_201916("attr", (Tmp4 = (cache_202688[name_202775]), Tmp4[0])[Tmp4[1]], real_name_202814)]; };
						}
						
						remove_202720.push(attribute_202746);
						}
						
						F.line = 3671;
						i_208381 = addInt(i_208381, 1);
					}
			} while(false);
		} while(false);
		F.line = 357;
		var len_202859 = (remove_202720.length);
		L5: do {
			F.line = 358;
			var i_202869 = 0;
			F.line = 3667;
			var colontmp__208388 = 0;
			F.line = 358;
			colontmp__208388 = ((len_202859)|0);
			F.line = 3668;
			var i_208390 = 0;
			L6: do {
				F.line = 3669;
					L7: while (true) {
					if (!(i_208390 < colontmp__208388)) break L7;
						F.line = 3670;
						i_202869 = i_208390;
						F.line = 360;
						var attr_202870 = remove_202720[i_202869];
						F.line = 361;
						var attr_name_202885 = (attr_202870.name);
						if (new RegExp("^id$", "i").test(attr_name_202885)) {
						F.line = 363;
						n_202683.removeAttribute(attr_name_202885);
						}
						else {
							F.line = 365;
						n_202683.removeAttributeNode((remove_202720[i_202869]));
						}
						
						F.line = 3671;
						i_208390 = addInt(i_208390, 1);
					}
			} while(false);
		} while(false);
		F.line = 367;
		var node_name_202895 = n_202683.nodeName;
		if (new RegExp("^script$", "i").test(node_name_202895)) {
		F.line = 369;
		var script_202896 = document.createElement(node_name_202895);
		L8: do {
			F.line = 370;
			var attr_202897 = null;
			F.line = 342;
			var v_208396 = null;
			F.line = 343;
			for (var k in attributes_202695) {
			F.line = 344;
			  if (!attributes_202695.hasOwnProperty(k)) continue;
			F.line = 345;
			  v_208396=attributes_202695[k];
			F.line = 346;
			attr_202897 = v_208396;
			F.line = 371;
			script_202896.setAttributeNode((attr_202897.cloneNode((true))));
			F.line = 347;
			}
		} while(false);
		F.line = 372;
		script_202896.textContent = n_202683.textContent;
		F.line = 373;
		n_202683.parentNode.replaceChild(script_202896, n_202683);
		}
		
	framePtr = F.prev;

	
}

function find_202934(n_202936, paths_202939, paths_202939_Idx, parts_202940) {
							var Tmp4;
								var Tmp5;

	var F={procname:"litz.find",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 377;
		var child_nodes_202941 = nimCopy(null, n_202936.childNodes, NTI26450);
		F.line = 378;
		var length_202962 = ((child_nodes_202941).length);
		L1: do {
			F.line = 380;
			var i_202972 = 0;
			F.line = 3667;
			var colontmp__208368 = 0;
			F.line = 380;
			colontmp__208368 = ((length_202962)|0);
			F.line = 3668;
			var i_208370 = 0;
			L2: do {
				F.line = 3669;
					L3: while (true) {
					if (!(i_208370 < colontmp__208368)) break L3;
						F.line = 3670;
						i_202972 = i_208370;
						F.line = 381;
						var child_202973 = child_nodes_202941[chckIndx(i_202972, 0, child_nodes_202941.length+0-1)-0];
						F.line = 382;
						switch (child_202973.nodeType) {
						case 1:
							F.line = 384;
							find_attributes_202681(child_202973, paths_202939, paths_202939_Idx, parts_202940);
							F.line = 385;
							find_202934(child_202973, paths_202939, paths_202939_Idx, parts_202940);
							break;
						case 8:
							if ((child_202973.textContent == uid_199572)) {
							parts_202940.shift();
							F.line = 389;
							if (should_use_text_content_199604.test(n_202936.nodeName)) {
							Tmp4 = create_path_obj_201916("text", n_202936, "");
							}
							else {
							Tmp4 = create_path_obj_201916("any", child_202973, "");
							}
							
							if (paths_202939[paths_202939_Idx] != null) { paths_202939[paths_202939_Idx].push(Tmp4); } else { paths_202939[paths_202939_Idx] = [Tmp4]; };
							}
							
							break;
						case 3:
								if (!should_use_text_content_199604.test(n_202936.nodeName)) Tmp5 = false; else {									Tmp5 = (((trim_199667).call((child_202973.textContent))) == uidc_199573);								}							if (Tmp5) {
							parts_202940.shift();
							F.line = 395;
							if (paths_202939[paths_202939_Idx] != null) { paths_202939[paths_202939_Idx].push(create_path_obj_201916("text", n_202936, "")); } else { paths_202939[paths_202939_Idx] = [create_path_obj_201916("text", n_202936, "")]; };
							}
							
							break;
						default: 
							break;
						}
						F.line = 3671;
						i_208370 = addInt(i_208370, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function create_template_203052(t_203054) {

		function inner_203108() {
			var result_203110 = null;

			var F={procname:"createTemplate.inner",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 423;
				var a_203111 = null;
				F.line = 424;
				a_203111 = {};
				F.line = 434;
				a_203111.fragment = fragment_203092;
				F.line = 434;
				a_203111.paths = paths_203074[0];
				F.line = 443;
				result_203110 = a_203111;
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_203110;

		}

	var result_203055 = null;

	var F={procname:"litz.createTemplate",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 402;
		var info_203057 = null;
		F.line = 403;
		var paths_203074 = [nimCopy(null, [], NTI203073)];
		F.line = 404;
		var html_203081 = t_203054.join(uidc_199573).replace(self_closing_regex_200556[0], (self_closing_place_201719));
		F.line = 405;
		var fragment_203092 = create_fragment_201784((this), html_203081);
		F.line = 406;
		find_202934(fragment_203092, paths_203074, 0, t_203054.slice());
		F.line = 407;
		info_203057 = inner_203108();
		F.line = 408;
		templates_200553[0].set(t_203054, info_203057);
		F.line = 409;
		result_203055 = info_203057;
	framePtr = F.prev;

	return result_203055;

}

function imp_node_203444(d_203446, n_203447) {
	var result_203448 = null;

	var F={procname:"litz.impNode",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		if (has_import_node_199603) {
		F.line = 413;
		result_203448 = d_203446.importNode(n_203447, true);
		}
		else {
			F.line = 415;
			result_203448 = n_203447.cloneNode(true);
		}
		
	framePtr = F.prev;

	return result_203448;

}

function find_path_202644(n_202646, path_202648) {
	var result_202649 = null;

	var F={procname:"litz.findPath",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 333;
		var tn_202650 = n_202646;
		L1: do {
			F.line = 334;
			var i_202667 = 0;
			F.line = 3667;
			var colontmp__208411 = 0;
			F.line = 334;
			colontmp__208411 = (path_202648 != null ? path_202648.length : 0);
			F.line = 3668;
			var i_208413 = 0;
			L2: do {
				F.line = 3669;
					L3: while (true) {
					if (!(i_208413 < colontmp__208411)) break L3;
						F.line = 3670;
						i_202667 = i_208413;
						F.line = 335;
						tn_202650 = tn_202650.childNodes[chckIndx(path_202648[chckIndx(i_202667, 0, path_202648.length+0-1)-0], 0, tn_202650.childNodes.length+0-1)-0];
						F.line = 3671;
						i_208413 = addInt(i_208413, 1);
					}
			} while(false);
		} while(false);
		F.line = 336;
		result_202649 = tn_202650;
	framePtr = F.prev;

	return result_202649;

}

function HEX2F_20442(x_20444, y_20445) {
	var result_20446 = 0.0;

	var F={procname:"system./",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3647;
		result_20446 = (x_20444 / y_20445);
	framePtr = F.prev;

	return result_20446;

}

function as_node_203798(item_203800, i_203801) {
			var Tmp1;
				var Tmp2;

	var result_203802 = null;

	var F={procname:"litz.asNode",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		if ("ELEMENT_NODE" in item_203800) {
		F.line = 450;
		result_203802 = (item_203800);
		}
		else {
			if ((item_203800.constructor == (wire_child_nodes_203462))) {
			if ((HEX2F_20442(1, ((i_203801)|0)) < 0.0)) {
			F.line = 454;
			if (!((i_203801 == 0))) {
			Tmp1 = item_203800.remove();
			}
			else {
			Tmp1 = item_203800.last;
			}
			
			result_203802 = (Tmp1);
			}
			else {
				F.line = 456;
				if (!((i_203801 == 0))) {
				Tmp2 = item_203800.insert();
				}
				else {
				Tmp2 = item_203800.first;
				}
				
				result_203802 = (Tmp2);
			}
			
			}
			else {
				F.line = 458;
				result_203802 = as_node_203798(render_lit_199684(item_203800, []), i_203801);
				F.line = 459;
				console.log("Item : ", item_203800);
			}
			
		}
		
	framePtr = F.prev;

	return result_203802;

}

function eqeq_203916(a_203918, b_203919) {
	var result_203920 = false;

	var F={procname:"litz.eqeq",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 462;
		result_203920 = a_203918 == b_203919;
	framePtr = F.prev;

	return result_203920;

}

function identity_203934(o_203936) {
	var result_203937 = null;

	var F={procname:"litz.identity",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 464;
		result_203937 = o_203936;
	framePtr = F.prev;

	return result_203937;

}

function sys_fatal_21437(message_21443) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
		F.line = 2967;
		var e_21445 = null;
		F.line = 2968;
		e_21445 = {m_type: NTI4250, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 2969;
		e_21445.message = nimCopy(null, message_21443, NTI138);
		F.line = 2970;
		raiseException(e_21445, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_21432(msg_21434) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3923;
		sys_fatal_21437(msg_21434);
	framePtr = F.prev;

	
}

function failed_assert_impl_21480(msg_21482) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3930;
		raise_assert_21432(msg_21482);
	framePtr = F.prev;

	
}

function find_204411(a_204416, item_204418) {
	var result_204419 = 0;

	var F={procname:"find.find",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 2550;
			var i_204614 = null;
			F.line = 3964;
			var i_208438 = 0;
			F.line = 3965;
			var l_208440 = (a_204416 != null ? a_204416.length : 0);
			L2: do {
				F.line = 3966;
					L3: while (true) {
					if (!(i_208438 < l_208440)) break L3;
						F.line = 3967;
						i_204614 = a_204416[chckIndx(i_208438, 0, a_204416.length+0-1)-0];
						if ((i_204614 == item_204418)) {
						F.line = 2551;
						break BeforeRet;
						}
						
						F.line = 2552;
						result_204419 = addInt(result_204419, 1);
						F.line = 3968;
						i_208438 = addInt(i_208438, 1);
						if (!(((a_204416 != null ? a_204416.length : 0) == l_208440))) {
						F.line = 3969;
						failed_assert_impl_21480(makeNimstrLit("/root/.choosenim/toolchains/nim-#devel/lib/system.nim(3969, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 2553;
		result_204419 = -1;
	} while (false);
	framePtr = F.prev;

	return result_204419;

}

function remove_203951(g_203957, pn_203958, before_203959, after_203960) {
	var F={procname:"litz.remove",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		if ((after_203960 == null)) {
		F.line = 468;
		pn_203958.removeChild(g_203957((before_203959), -1));
		}
		else {
			F.line = 470;
			var rng_203979 = pn_203958.ownerDocument.createRange();
			rng_203979.setStartBefore((g_203957((before_203959), -1)));
			rng_203979.setEndAfter((g_203957((after_203960), -1)));
		rng_203979.deleteContents();
		}
		
	framePtr = F.prev;

	
}

function domdiff_204043(pn_204045, cn_204048, cn_204048_Idx, fn_204050, opts_204052, opts_204052_Idx) {

		function inner_204072() {
			var result_204074 = null;

			var F={procname:"domdiff.inner",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 423;
				var a_204075 = null;
				F.line = 424;
				a_204075 = {};
				F.line = 443;
				result_204074 = a_204075;
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_204074;

		}
		var Tmp1;
		var Tmp2;
		var Tmp3;
		var Tmp4;
		var Tmp5;
										var Tmp10;
		var Tmp11;
		var Tmp12;

	var result_204054 = null;

	var F={procname:"litz.domdiff",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((opts_204052[opts_204052_Idx] == null)) {
		F.line = 477;
		opts_204052[opts_204052_Idx] = inner_204072();
		}
		
		F.line = 480;
		var compare_204119 = (((opts_204052[opts_204052_Idx].compare) || (eqeq_203916)));
		F.line = 481;
		var get_204150 = (((opts_204052[opts_204052_Idx].node) || (identity_203934)));
		F.line = 482;
		if ((opts_204052[opts_204052_Idx].before == null)) {
		Tmp1 = null;
		}
		else {
		Tmp1 = get_204150(opts_204052[opts_204052_Idx].before, 0);
		}
		
		var before_204172 = Tmp1;
		F.line = 483;
		var current_start_204174 = 0;
		F.line = 484;
		var future_start_204176 = 0;
		F.line = 485;
		var current_end_204184 = subInt((cn_204048[cn_204048_Idx] != null ? cn_204048[cn_204048_Idx].length : 0), 1);
		F.line = 486;
		if ((0 < (cn_204048[cn_204048_Idx] != null ? cn_204048[cn_204048_Idx].length : 0))) {
		Tmp2 = cn_204048[cn_204048_Idx][chckIndx(0, 0, cn_204048[cn_204048_Idx].length+0-1)-0];
		}
		else {
		Tmp2 = null;
		}
		
		var current_start_node_204201 = Tmp2;
		F.line = 487;
		if ((0 < current_end_204184)) {
		Tmp3 = cn_204048[cn_204048_Idx][chckIndx(current_end_204184, 0, cn_204048[cn_204048_Idx].length+0-1)-0];
		}
		else {
		Tmp3 = null;
		}
		
		var current_end_node_204204 = Tmp3;
		F.line = 488;
		var future_end_204212 = subInt((fn_204050 != null ? fn_204050.length : 0), 1);
		F.line = 489;
		if ((0 < (fn_204050 != null ? fn_204050.length : 0))) {
		Tmp4 = fn_204050[chckIndx(0, 0, fn_204050.length+0-1)-0];
		}
		else {
		Tmp4 = null;
		}
		
		var future_start_node_204229 = Tmp4;
		F.line = 490;
		if ((0 < future_end_204212)) {
		Tmp5 = fn_204050[chckIndx(future_end_204212, 0, fn_204050.length+0-1)-0];
		}
		else {
		Tmp5 = null;
		}
		
		var future_end_node_204232 = Tmp5;
		L6: do {
			F.line = 492;
				L7: while (true) {
				if (!((current_start_204174 <= current_end_204184) && (future_start_204176 <= future_end_204212))) break L7;
					if ((current_start_node_204201 == null)) {
					F.line = 494;
					current_start_204174 = addInt(current_start_204174, 1);
					F.line = 495;
					current_start_node_204201 = cn_204048[cn_204048_Idx][chckIndx(current_start_204174, 0, cn_204048[cn_204048_Idx].length+0-1)-0];
					}
					else {
					if ((current_end_node_204204 == null)) {
					F.line = 497;
					current_end_204184 = subInt(current_end_204184, 1);
					F.line = 498;
					current_end_node_204204 = cn_204048[cn_204048_Idx][chckIndx(current_end_204184, 0, cn_204048[cn_204048_Idx].length+0-1)-0];
					}
					else {
					if ((future_start_node_204229 == null)) {
					F.line = 500;
					future_start_204176 = addInt(future_start_204176, 1);
					F.line = 501;
					future_start_node_204229 = fn_204050[chckIndx(future_start_204176, 0, fn_204050.length+0-1)-0];
					}
					else {
					if ((future_end_node_204232 == null)) {
					F.line = 503;
					future_end_204212 = subInt(future_end_204212, 1);
					F.line = 504;
					future_end_node_204232 = fn_204050[chckIndx(future_end_204212, 0, fn_204050.length+0-1)-0];
					}
					else {
					if (compare_204119(current_start_node_204201, future_start_node_204229)) {
					F.line = 506;
					current_start_204174 = addInt(current_start_204174, 1);
					F.line = 507;
					future_start_204176 = addInt(future_start_204176, 1);
					F.line = 508;
					current_start_node_204201 = cn_204048[cn_204048_Idx][chckIndx(current_start_204174, 0, cn_204048[cn_204048_Idx].length+0-1)-0];
					F.line = 509;
					future_start_node_204229 = fn_204050[chckIndx(future_start_204176, 0, fn_204050.length+0-1)-0];
					}
					else {
					if (compare_204119(current_end_node_204204, future_end_node_204232)) {
					F.line = 511;
					current_end_204184 = subInt(current_end_204184, 1);
					F.line = 512;
					future_end_204212 = subInt(future_end_204212, 1);
					F.line = 513;
					current_end_node_204204 = cn_204048[cn_204048_Idx][chckIndx(current_end_204184, 0, cn_204048[cn_204048_Idx].length+0-1)-0];
					F.line = 514;
					future_end_node_204232 = fn_204050[chckIndx(future_end_204212, 0, fn_204050.length+0-1)-0];
					}
					else {
					if (compare_204119(current_start_node_204201, future_end_node_204232)) {
					F.line = 516;
					pn_204045.insertBefore(get_204150((current_start_node_204201), 1), get_204150((current_end_node_204204), 0).nextSibling);
					F.line = 517;
					current_start_204174 = addInt(current_start_204174, 1);
					F.line = 518;
					future_end_204212 = subInt(future_end_204212, 1);
					F.line = 519;
					current_start_node_204201 = cn_204048[cn_204048_Idx][chckIndx(current_start_204174, 0, cn_204048[cn_204048_Idx].length+0-1)-0];
					F.line = 520;
					future_end_node_204232 = fn_204050[chckIndx(future_end_204212, 0, fn_204050.length+0-1)-0];
					}
					else {
					if (compare_204119(current_end_node_204204, future_start_node_204229)) {
					F.line = 522;
					pn_204045.insertBefore(get_204150((current_end_node_204204), 1), get_204150((current_start_node_204201), 0));
					F.line = 523;
					current_end_204184 = subInt(current_end_204184, 1);
					F.line = 524;
					future_start_204176 = addInt(future_start_204176, 1);
					F.line = 525;
					current_end_node_204204 = cn_204048[cn_204048_Idx][chckIndx(current_end_204184, 0, cn_204048[cn_204048_Idx].length+0-1)-0];
					F.line = 526;
					future_start_node_204229 = fn_204050[chckIndx(future_start_204176, 0, fn_204050.length+0-1)-0];
					}
					else {
						F.line = 528;
						var index_204648 = find_204411(cn_204048[cn_204048_Idx], future_start_node_204229);
						if ((index_204648 < 0)) {
						F.line = 530;
						pn_204045.insertBefore(get_204150((future_start_node_204229), 1), get_204150((current_start_node_204201), 0));
						F.line = 531;
						future_start_204176 = addInt(future_start_204176, 1);
						F.line = 532;
						future_start_node_204229 = fn_204050[chckIndx(future_start_204176, 0, fn_204050.length+0-1)-0];
						}
						else {
							F.line = 535;
							var i_204670 = index_204648;
							F.line = 536;
							var f_204671 = future_start_204176;
							L8: do {
								F.line = 537;
									L9: while (true) {
										if (!((i_204670 <= current_end_204184) && (f_204671 <= future_end_204212))) Tmp10 = false; else {											Tmp10 = (cn_204048[cn_204048_Idx][chckIndx(i_204670, 0, cn_204048[cn_204048_Idx].length+0-1)-0] == fn_204050[chckIndx(f_204671, 0, fn_204050.length+0-1)-0]);										}									if (!Tmp10) break L9;
										F.line = 538;
										i_204670 = addInt(i_204670, 1);
										F.line = 539;
										f_204671 = addInt(f_204671, 1);
									}
							} while(false);
							if ((1 < subInt(i_204670, index_204648))) {
							F.line = 541;
							index_204648 = subInt(index_204648, 1);
							if ((index_204648 == current_start_204174)) {
							F.line = 543;
							pn_204045.removeChild(get_204150((current_start_node_204201), -1));
							}
							else {
								F.line = 545;
							remove_203951(get_204150, pn_204045, current_start_node_204201, cn_204048[cn_204048_Idx][chckIndx(index_204648, 0, cn_204048[cn_204048_Idx].length+0-1)-0]);
							}
							
							F.line = 546;
							current_start_204174 = i_204670;
							F.line = 547;
							future_start_204176 = f_204671;
							F.line = 548;
							current_start_node_204201 = cn_204048[cn_204048_Idx][chckIndx(i_204670, 0, cn_204048[cn_204048_Idx].length+0-1)-0];
							F.line = 549;
							future_start_node_204229 = fn_204050[chckIndx(f_204671, 0, fn_204050.length+0-1)-0];
							}
							else {
								F.line = 551;
								var el_204718 = cn_204048[cn_204048_Idx][chckIndx(index_204648, 0, cn_204048[cn_204048_Idx].length+0-1)-0];
								F.line = 552;
								cn_204048[cn_204048_Idx][chckIndx(index_204648, 0, cn_204048[cn_204048_Idx].length+0-1)-0] = null;
								F.line = 553;
								pn_204045.insertBefore(get_204150((el_204718), 1), get_204150((current_start_node_204201), 0));
								F.line = 554;
								future_start_204176 = addInt(future_start_204176, 1);
								F.line = 555;
								future_start_node_204229 = fn_204050[chckIndx(future_start_204176, 0, fn_204050.length+0-1)-0];
							}
							
						}
						
					}
					}}}}}}}
				}
		} while(false);
		if (((current_start_204174 <= current_end_204184) || (future_start_204176 <= future_end_204212))) {
		if ((current_end_204184 < current_start_204174)) {
		F.line = 560;
		if ((addInt(future_end_204212, 1) < (fn_204050 != null ? fn_204050.length : 0))) {
		Tmp11 = fn_204050[chckIndx(addInt(future_end_204212, 1), 0, fn_204050.length+0-1)-0];
		}
		else {
		Tmp11 = null;
		}
		
		var pin_204754 = Tmp11;
		F.line = 561;
		if ((pin_204754 == null)) {
		Tmp12 = before_204172;
		}
		else {
		Tmp12 = get_204150((pin_204754), 0);
		}
		
		var place_204772 = Tmp12;
		if ((future_start_204176 == future_end_204212)) {
		F.line = 563;
		pn_204045.insertBefore(get_204150((fn_204050[chckIndx(future_start_204176, 0, fn_204050.length+0-1)-0]), 1), place_204772);
		}
		else {
			F.line = 565;
			var fragment_204779 = pn_204045.ownerDocument.createDocumentFragment();
			L13: do {
				F.line = 566;
					L14: while (true) {
					if (!(future_start_204176 <= future_end_204212)) break L14;
						F.line = 567;
						future_start_204176 = addInt(future_start_204176, 1);
						F.line = 568;
						fragment_204779.appendChild(get_204150((fn_204050[chckIndx(future_start_204176, 0, fn_204050.length+0-1)-0]), 1));
					}
			} while(false);
			F.line = 569;
			pn_204045.insertBefore(fragment_204779, place_204772);
		}
		
		}
		else {
			if ((cn_204048[cn_204048_Idx][chckIndx(current_start_204174, 0, cn_204048[cn_204048_Idx].length+0-1)-0] == null)) {
			F.line = 571;
			current_start_204174 = addInt(current_start_204174, 1);
			}
			
			if ((current_start_204174 == current_end_204184)) {
			F.line = 573;
			pn_204045.removeChild(get_204150((cn_204048[cn_204048_Idx][chckIndx(current_start_204174, 0, cn_204048[cn_204048_Idx].length+0-1)-0]), -1));
			}
			else {
				F.line = 575;
			remove_203951(get_204150, pn_204045, cn_204048[cn_204048_Idx][chckIndx(current_start_204174, 0, cn_204048[cn_204048_Idx].length+0-1)-0], cn_204048[cn_204048_Idx][chckIndx(current_end_204184, 0, cn_204048[cn_204048_Idx].length+0-1)-0]);
			}
			
		}
		
		}
		
		F.line = 577;
		result_204054 = nimCopy(null, fn_204050, NTI204049);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_204054;

}

function text_199547(n_199549, t_199550) {
	var result_199551 = null;

	var F={procname:"litz.text",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 133;
		result_199551 = doc_199484(n_199549).createTextNode(t_199550);
	framePtr = F.prev;

	return result_199551;

}

function is_promiseish_204864(v_204866) {
		var Tmp1;

	var result_204867 = false;

	var F={procname:"litz.isPromiseish",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 587;
		if (!!((v_204866 == null))) Tmp1 = false; else {			Tmp1 = "then" in v_204866;		}		result_204867 = Tmp1;
	framePtr = F.prev;

	return result_204867;

}

function component_200534() {
	var result_200536 = null;

	var F={procname:"litz.component",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 212;
		result_200536 = this;
	framePtr = F.prev;

	return result_200536;

}

function can_diff_204835(v_204837) {
	var result_204838 = false;

	var F={procname:"litz.canDiff",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 584;
		result_204838 = (("ELEMENT_NODE" in v_204837 || v_204837 instanceof (wire_child_nodes_203462)) || v_204837 instanceof (component_200534));
	framePtr = F.prev;

	return result_204838;

}

function as_html_204892(h_204894) {

		function inner_204902() {
			var result_204904 = null;

			var F={procname:"asHTML.inner",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 423;
				var a_204905 = null;
				F.line = 424;
				a_204905 = {};
				F.line = 434;
				a_204905.html = h_204894;
				F.line = 443;
				result_204904 = a_204905;
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_204904;

		}

	var result_204895 = null;

	var F={procname:"litz.asHTML",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 590;
		result_204895 = inner_204902();
	framePtr = F.prev;

	return result_204895;

}

function invoke_at_distance_205044(v_205046, cb_205051) {
	var F={procname:"litz.invokeAtDistance",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 593;
		var ph_205057 = [v_205046.placeholder];
		F.line = 594;
		cb_205051(ph_205057, 0);
		if ("text" in v_205046) {
		F.line = 596;
		Promise.resolve(v_205046.text).then(String).then(cb_205051);
		}
		else {
		if ("any" in v_205046) {
		F.line = 598;
		Promise.resolve(v_205046).then(cb_205051);
		}
		else {
		if ("html" in v_205046) {
		F.line = 600;
		Promise.resolve(v_205046.html).then((as_html_204892)).then(cb_205051);
		}
		else {
			F.line = 602;
		Promise.resolve(intent_201305[0].invoke((v_205046), (cb_205051))).then(cb_205051);
		}
		}}
	framePtr = F.prev;

	
}

function set_any_content_205119(n_205121, child_nodes_205124, child_nodes_205124_Idx) {

		function inner_205136() {
			var result_205138 = null;

			var F={procname:"setAnyContent.inner",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 423;
				var a_205139 = null;
				F.line = 424;
				a_205139 = {};
				F.line = 434;
				a_205139.node = as_node_203798;
				F.line = 434;
				a_205139.before = n_205121;
				F.line = 443;
				result_205138 = a_205139;
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_205138;

		}

		function set_any_content_inner_205434(v_205437, v_205437_Idx) {

							function inner_205565() {
								var result_205567 = null;

								var F={procname:"setAnyContentInner.inner",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
								framePtr = F;
								BeforeRet: do {
									F.line = 423;
									var a_205568 = null;
									F.line = 424;
									a_205568 = {};
									F.line = 434;
									a_205568.html = v_205437[v_205437_Idx];
									F.line = 443;
									result_205567 = a_205568;
									break BeforeRet;
								} while (false);
								framePtr = F.prev;

								return result_205567;

							}
					var Tmp1;

			var F={procname:"setAnyContent.setAnyContentInner",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
			framePtr = F;
				F.line = 611;
				switch (toJSStr(cstrToNimstr(typeof(v_205437[v_205437_Idx])))) {
				case "string":
				case "number":
				case "boolean":
					if (fast_path_205432) {
					if (!((old_value_205433 == v_205437[v_205437_Idx]))) {
					F.line = 615;
					old_value_205433 = v_205437[v_205437_Idx];
					F.line = 616;
					child_nodes_205124[child_nodes_205124_Idx][chckIndx(0, 0, child_nodes_205124[child_nodes_205124_Idx].length+0-1)-0].textContent = (v_205437[v_205437_Idx]);
					}
					
					}
					else {
						F.line = 618;
						fast_path_205432 = true;
						F.line = 619;
						old_value_205433 = v_205437[v_205437_Idx];
						F.line = 620;
						child_nodes_205124[child_nodes_205124_Idx] = nimCopy(null, domdiff_204043(n_205121.parentNode, child_nodes_205124, child_nodes_205124_Idx, [text_199547(n_205121, (v_205437[v_205437_Idx]))], diff_options_205431, 0), NTI204053);
					}
					
					break;
				case "object":
				case "undefined":
					if (((v_205437[v_205437_Idx]) == null)) {
					F.line = 623;
					fast_path_205432 = false;
					F.line = 624;
					child_nodes_205124[child_nodes_205124_Idx] = nimCopy(null, domdiff_204043(n_205121.parentNode, child_nodes_205124, child_nodes_205124_Idx, [], diff_options_205431, 0), NTI204053);
					}
					
					break;
				default: 
					F.line = 626;
					fast_path_205432 = false;
					F.line = 627;
					old_value_205433 = v_205437[v_205437_Idx];
					if (is_js_array_201437[0](v_205437[v_205437_Idx])) {
					if (((v_205437[v_205437_Idx].length) == 0)) {
					if ((0 < (child_nodes_205124[child_nodes_205124_Idx] != null ? child_nodes_205124[child_nodes_205124_Idx].length : 0))) {
					F.line = 631;
					child_nodes_205124[child_nodes_205124_Idx] = nimCopy(null, domdiff_204043(n_205121.parentNode, child_nodes_205124, child_nodes_205124_Idx, [], diff_options_205431, 0), NTI204053);
					}
					
					}
					else {
						F.line = 633;
						switch (toJSStr(cstrToNimstr(typeof(v_205437[v_205437_Idx][0])))) {
						case "string":
						case "number":
						case "boolean":
							F.line = 635;
							var h_205631 = [inner_205565()];
							F.line = 636;
							set_any_content_inner_205434(h_205631, 0);
							break;
						case "object":
							if (is_js_array_201437[0](v_205437[v_205437_Idx][0])) {
							F.line = 639;
							v_205437[v_205437_Idx] = v_205437[v_205437_Idx].concat.apply(([]), v_205437[v_205437_Idx]);
							}
							
							if (is_promiseish_204864(v_205437[v_205437_Idx][0])) {
							F.line = 641;
							Promise.all(v_205437[v_205437_Idx]).then(set_any_content_inner_205434);
							}
							
							break;
						default: 
							F.line = 643;
							child_nodes_205124[child_nodes_205124_Idx] = nimCopy(null, domdiff_204043(n_205121.parentNode, child_nodes_205124, child_nodes_205124_Idx, (v_205437[v_205437_Idx]), diff_options_205431, 0), NTI204053);
							break;
						}
					}
					
					}
					else {
					if (can_diff_204835(v_205437[v_205437_Idx])) {
					F.line = 646;
					if ((v_205437[v_205437_Idx].nodeType == (11))) {
					Tmp1 = domdiff_204043(n_205121.parentNode, child_nodes_205124, child_nodes_205124_Idx, ([].slice.call(v_205437[v_205437_Idx].childNodes)), diff_options_205431, 0);
					}
					else {
					Tmp1 = domdiff_204043(n_205121.parentNode, child_nodes_205124, child_nodes_205124_Idx, [(v_205437[v_205437_Idx])], diff_options_205431, 0);
					}
					
					child_nodes_205124[child_nodes_205124_Idx] = nimCopy(null, Tmp1, NTI204053);
					}
					else {
					if (is_promiseish_204864(v_205437[v_205437_Idx])) {
					F.line = 661;
					v_205437[v_205437_Idx].then(set_any_content_inner_205434);
					}
					else {
					if ("placeholder" in v_205437[v_205437_Idx]) {
					F.line = 663;
					invoke_at_distance_205044(v_205437[v_205437_Idx], set_any_content_inner_205434);
					}
					else {
					if ("text" in v_205437[v_205437_Idx]) {
					F.line = 665;
					var o_205733 = [(String(v_205437[v_205437_Idx]))];
					F.line = 666;
					set_any_content_inner_205434(o_205733, 0);
					}
					else {
					if ("any" in v_205437[v_205437_Idx]) {
					F.line = 668;
					set_any_content_inner_205434(v_205437, v_205437_Idx);
					}
					else {
					if ("html" in v_205437[v_205437_Idx]) {
					F.line = 670;
					child_nodes_205124[child_nodes_205124_Idx] = nimCopy(null, domdiff_204043(n_205121.parentNode, child_nodes_205124, child_nodes_205124_Idx, ([].slice.call((create_fragment_201784(n_205121, ([]).concat((v_205437[v_205437_Idx].html)).join("")).childNodes))), diff_options_205431, 0), NTI204053);
					}
					else {
					if ("length" in v_205437[v_205437_Idx]) {
					F.line = 672;
					var o_205800 = [[].slice.call(v_205437[v_205437_Idx])];
					F.line = 673;
					set_any_content_inner_205434(o_205800, 0);
					}
					else {
						F.line = 676;
						var ac_205802 = set_any_content_inner_205434;
						F.line = 677;
						var invoc_205824 = [intent_201305[0].invoke((v_205437[v_205437_Idx]), (ac_205802))];
						F.line = 678;
						set_any_content_inner_205434(invoc_205824, 0);
					}
					}}}}}}}
					break;
				}
			framePtr = F.prev;

			
		}

	var result_205129 = null;

	var F={procname:"litz.setAnyContent",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 606;
		var diff_options_205431 = [inner_205136()];
		F.line = 607;
		var fast_path_205432 = false;
		F.line = 608;
		var old_value_205433 = null;
		F.line = 680;
		result_205129 = set_any_content_inner_205434;
	framePtr = F.prev;

	return result_205129;

}

function get_children_205852(n_205854) {
	var result_205855 = null;

	var F={procname:"litz.getChildren",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 683;
		result_205855 = ([]);
		L1: do {
			F.line = 685;
			var child_node_205873 = null;
			F.line = 3962;
			var colontmp__208461 = null;
			F.line = 685;
			colontmp__208461 = n_205854.childNodes;
			F.line = 3964;
			var i_208463 = 0;
			F.line = 3965;
			var l_208465 = (colontmp__208461 != null ? colontmp__208461.length : 0);
			L2: do {
				F.line = 3966;
					L3: while (true) {
					if (!(i_208463 < l_208465)) break L3;
						F.line = 3967;
						child_node_205873 = colontmp__208461[chckIndx(i_208463, 0, colontmp__208461.length+0-1)-0];
						if ((child_node_205873.nodeType == 1)) {
						result_205855.push((child_node_205873));
						}
						
						F.line = 3968;
						i_208463 = addInt(i_208463, 1);
						if (!(((colontmp__208461 != null ? colontmp__208461.length : 0) == l_208465))) {
						F.line = 3969;
						failed_assert_impl_21480(makeNimstrLit("/root/.choosenim/toolchains/nim-#devel/lib/system.nim(3969, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_205855;

}

function observe_205909() {

function dispatch_target_205911(n_205913, e_205914) {
	var F={procname:"observe.dispatchTarget",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		if (components_200552[0].has(n_205913)) {
		F.line = 691;
		n_205913.dispatchEvent(e_205914);
		}
		
		F.line = 693;
		var children_205921 = ((n_205913.children) || get_children_205852(n_205913));
		L1: do {
			F.line = 694;
			var child_205922 = null;
			F.line = 342;
			var v_208459 = null;
			F.line = 343;
			for (var k in children_205921) {
			F.line = 344;
			  if (!children_205921.hasOwnProperty(k)) continue;
			F.line = 345;
			  v_208459=children_205921[k];
			F.line = 346;
			child_205922 = v_208459;
			F.line = 695;
			dispatch_target_205911((child_205922), e_205914);
			F.line = 347;
			}
		} while(false);
	framePtr = F.prev;

	
}

function dispatch_all_205945(nodes_205947, kind_205948) {
	var F={procname:"observe.dispatchAll",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 698;
		var event_205964 = ((new new_event_200571[0](kind_205948)));
		L1: do {
			F.line = 699;
			var node_205965 = null;
			F.line = 342;
			var v_208455 = null;
			F.line = 343;
			for (var k in nodes_205947) {
			F.line = 344;
			  if (!nodes_205947.hasOwnProperty(k)) continue;
			F.line = 345;
			  v_208455=nodes_205947[k];
			F.line = 346;
			node_205965 = v_208455;
			if (((node_205965).nodeType == 1)) {
			F.line = 701;
			dispatch_target_205911((node_205965), event_205964);
			}
			
			F.line = 347;
			}
		} while(false);
	framePtr = F.prev;

	
}

		function HEX3Aanonymous_206005(records_206007) {
			var F={procname:"observe.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
			framePtr = F;
				L1: do {
					F.line = 706;
					var record_206008 = null;
					F.line = 342;
					var v_208449 = null;
					F.line = 343;
					for (var k in records_206007) {
					F.line = 344;
					  if (!records_206007.hasOwnProperty(k)) continue;
					F.line = 345;
					  v_208449=records_206007[k];
					F.line = 346;
					record_206008 = v_208449;
					F.line = 707;
					dispatch_all_205945(record_206008.removedNodes, toJSStr(disconnected_199570));
					F.line = 708;
					dispatch_all_205945(record_206008.addedNodes, toJSStr(connected_199569));
					F.line = 347;
					}
				} while(false);
			framePtr = F.prev;

			
		}

		function inner_206046() {
			var result_206048 = null;

			var F={procname:"observe.inner",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 423;
				var a_206049 = null;
				F.line = 424;
				a_206049 = {};
				F.line = 434;
				a_206049.subtree = true;
				F.line = 434;
				a_206049.childList = true;
				F.line = 443;
				result_206048 = a_206049;
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_206048;

		}

		function HEX3Aanonymous_206444(ev_206446) {
			var F={procname:"observe.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
			framePtr = F;
				F.line = 712;
				dispatch_all_205945(([ev_206446.target]), toJSStr(disconnected_199570));
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_206468(ev_206470) {
			var F={procname:"observe.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
			framePtr = F;
				F.line = 714;
				dispatch_all_205945(([ev_206470.target]), toJSStr(connected_199569));
			framePtr = F.prev;

			
		}

	var F={procname:"litz.observe",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 703;
++excHandler;
		try {
		new MutationObserver(HEX3Aanonymous_206005).observe((document), (inner_206046()));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
		framePtr = F;
		F.line = 711;
		document.addEventListener("DOMNodeRemoved", HEX3Aanonymous_206444, false);
		F.line = 713;
		document.addEventListener("DOMNodeInserted", HEX3Aanonymous_206468, false);
		lastJSError = prevJSError;
		} finally {
		framePtr = F;
		}
	framePtr = F.prev;

	
}

function set_attribute_206508(n_206510, name_206511, og_206512) {
			var Tmp1;

		function HEX3Aanonymous_206564(nv_206566) {
			var F={procname:"setAttribute.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
			framePtr = F;
				if (!((old_value_206517 == nv_206566))) {
				if (!((old_value_206517 == null))) {
				F.line = 731;
				n_206510.removeEventListener(kind_206549, (old_value_206517), false);
				}
				
				F.line = 732;
				old_value_206517 = nv_206566;
				if (!((nv_206566 == null))) {
				F.line = 733;
				n_206510.addEventListener(kind_206549, (nv_206566), false);
				}
				
				}
				
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_206638(nv_206640) {
			var F={procname:"setAttribute.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
			framePtr = F;
				if (!((old_value_206517 == nv_206640))) {
				F.line = 737;
				old_value_206517 = nv_206640;
				if (!((n_206510[name_206511] == nv_206640))) {
				F.line = 739;
				n_206510[name_206511] = nv_206640;
				if ((nv_206640 == null)) {
				F.line = 741;
				n_206510.removeAttribute(name_206511);
				}
				
				}
				
				}
				
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_206690(o_206692) {
				var Tmp1;

			var F={procname:"setAttribute.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
			framePtr = F;
				F.line = 744;
				old_value_206517 = ((intent_201305[0].attributes[name_206511])(n_206510, o_206692));
				F.line = 745;
				if ((old_value_206517 == null)) {
				Tmp1 = [];
				}
				else {
				Tmp1 = (old_value_206517);
				}
				
				n_206510.setAttribute(name_206511, toJSStr(Tmp1));
			framePtr = F.prev;

			
		}

			function HEX3Aanonymous_206752(nv_206754) {
				var F={procname:"setAttribute.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
				framePtr = F;
					if (!((old_value_206517 == nv_206754))) {
					F.line = 753;
					old_value_206517 = nv_206754;
					if (!((attr_206751.value == nv_206754))) {
					if ((nv_206754 == null)) {
					if (owner_206750) {
					F.line = 757;
					owner_206750 = false;
					F.line = 758;
					n_206510.removeAttributeNode(attr_206751);
					}
					
					F.line = 759;
					attr_206751.value = nv_206754;
					}
					else {
						F.line = 761;
						attr_206751.value = nv_206754;
						if (!(owner_206750)) {
						F.line = 763;
						owner_206750 = true;
						F.line = 764;
						n_206510.setAttributeNode(attr_206751);
						}
						
					}
					
					}
					
					}
					
				framePtr = F.prev;

				
			}

	var result_206516 = null;

	var F={procname:"litz.setAttribute",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 717;
		var old_value_206517 = null;
		if ((name_206511 == "style")) {
		}
		else {
		if (new RegExp("^on", "").test(name_206511)) {
		F.line = 721;
		var kind_206549 = ((name_206511).slice((2)));
			if ((kind_206549 == toJSStr(connected_199569))) Tmp1 = true; else {				Tmp1 = (kind_206549 == toJSStr(disconnected_199570));			}		if (Tmp1) {
		if (not_observing_200558[0]) {
		F.line = 724;
		not_observing_200558[0] = false;
		F.line = 725;
		observe_205909();
		}
		
		components_200552[0].add((n_206510));
		}
		else {
		if (name_206511.toLowerCase() in n_206510) {
		F.line = 728;
		kind_206549 = kind_206549.toLowerCase();
		}
		}
		F.line = 729;
		result_206516 = HEX3Aanonymous_206564;
		break BeforeRet;
		}
		else {
		if (((name_206511 == "data") || name_206511 in n_206510)) {
		F.line = 735;
		result_206516 = HEX3Aanonymous_206638;
		break BeforeRet;
		}
		else {
		if (name_206511 in intent_201305[0].attributes) {
		F.line = 743;
		result_206516 = HEX3Aanonymous_206690;
		break BeforeRet;
		}
		else {
			F.line = 748;
			var owner_206750 = false;
			F.line = 749;
			var attr_206751 = og_206512.cloneNode(true);
			F.line = 751;
			result_206516 = HEX3Aanonymous_206752;
			break BeforeRet;
		}
		}}}
	} while (false);
	framePtr = F.prev;

	return result_206516;

}

function set_text_content_206812(n_206814) {

		function HEX3Aanonymous_206826(v_206829, v_206829_Idx) {
					var Tmp1;
					var Tmp2;

			var F={procname:"setTextContent.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
			framePtr = F;
				if (!((old_value_206820 == v_206829[v_206829_Idx]))) {
				F.line = 772;
				old_value_206820 = v_206829[v_206829_Idx];
					if (!(typeof(v_206829[v_206829_Idx]) == "object")) Tmp1 = false; else {						Tmp1 = !((v_206829[v_206829_Idx] == null));					}				if (Tmp1) {
				if (is_promiseish_204864(v_206829[v_206829_Idx])) {
				F.line = 775;
				v_206829[v_206829_Idx].then(text_content_206825);
				}
				else {
				if ("placeholder" in v_206829[v_206829_Idx]) {
				F.line = 777;
				invoke_at_distance_205044(v_206829[v_206829_Idx], result_206819);
				}
				else {
				if ("text" in v_206829[v_206829_Idx]) {
				F.line = 779;
				var o_206862 = [(String(v_206829[v_206829_Idx].text))];
				F.line = 780;
				text_content_206825(o_206862, 0);
				}
				else {
				if ("any" in v_206829[v_206829_Idx]) {
				F.line = 782;
				text_content_206825(v_206829, v_206829_Idx);
				}
				else {
				if ("html" in v_206829[v_206829_Idx]) {
				F.line = 784;
				var o_206901 = [(([]).concat((v_206829[v_206829_Idx].html)).join(""))];
				F.line = 785;
				text_content_206825(o_206901, 0);
				}
				else {
				if ("length" in v_206829[v_206829_Idx]) {
				F.line = 787;
				var o_206917 = [([].slice.call(v_206829[v_206829_Idx]).join(""))];
				F.line = 788;
				text_content_206825(o_206917, 0);
				}
				else {
					F.line = 790;
					var o_206940 = [intent_201305[0].invoke((v_206829[v_206829_Idx]), (text_content_206825))];
					F.line = 791;
					text_content_206825(o_206940, 0);
				}
				}}}}}
				}
				else {
					F.line = 793;
					if ((v_206829[v_206829_Idx] == null)) {
					Tmp2 = [];
					}
					else {
					Tmp2 = (v_206829[v_206829_Idx]);
					}
					
				n_206814.textContent = toJSStr(Tmp2);
				}
				
				}
				
			framePtr = F.prev;

			
		}

	var result_206819 = null;

	var F={procname:"litz.setTextContent",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 767;
		var old_value_206820 = null;
		F.line = 769;
		var text_content_206825 = null;
		F.line = 770;
		text_content_206825 = HEX3Aanonymous_206826;
		F.line = 794;
		result_206819 = text_content_206825;
	framePtr = F.prev;

	return result_206819;

}

function create_update_206988(root_206991, root_206991_Idx, paths_206993) {
	var result_206994 = null;

	var F={procname:"litz.createUpdate",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 798;
		var updates_207004 = ([]);
		L1: do {
			F.line = 799;
			var info_207214 = null;
			F.line = 3964;
			var i_208406 = 0;
			F.line = 3965;
			var l_208408 = (paths_206993 != null ? paths_206993.length : 0);
			L2: do {
				F.line = 3966;
					L3: while (true) {
					if (!(i_208406 < l_208408)) break L3;
						F.line = 3967;
						info_207214 = paths_206993[chckIndx(i_208406, 0, paths_206993.length+0-1)-0];
						F.line = 800;
						var node_207231 = find_path_202644(root_206991[root_206991_Idx], (info_207214.path));
						F.line = 801;
						switch (toJSStr(cstrToNimstr((info_207214.kind)))) {
						case "any":
							F.line = 803;
							var cn_207262 = [nimCopy(null, [], NTI207261)];
							updates_207004.push((set_any_content_205119(node_207231, cn_207262, 0)));
							break;
						case "attr":
							updates_207004.push((set_attribute_206508(node_207231, (info_207214.name), (info_207214.node))));
							break;
						case "text":
							updates_207004.push((set_text_content_206812(node_207231)));
							F.line = 809;
							node_207231.textContent = "";
							break;
						default: 
							break;
						}
						F.line = 3968;
						i_208406 = addInt(i_208406, 1);
						if (!(((paths_206993 != null ? paths_206993.length : 0) == l_208408))) {
						F.line = 3969;
						failed_assert_impl_21480(makeNimstrLit("/root/.choosenim/toolchains/nim-#devel/lib/system.nim(3969, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 810;
		result_206994 = updates_207004;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_206994;

}

function upgrade_207410(t_207412) {

		function inner_207496() {
			var result_207498 = null;

			var F={procname:"upgrade.inner",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 423;
				var a_207499 = null;
				F.line = 424;
				a_207499 = {};
				F.line = 434;
				a_207499.template = ut_207414;
				F.line = 434;
				a_207499.updates = updates_207489;
				F.line = 443;
				result_207498 = a_207499;
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_207498;

		}

	var F={procname:"litz.upgrade",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 824;
		var ut_207414 = unique_201702(t_207412);
		F.line = 825;
		var info_207456 = (templates_200553[0].get((ut_207414)) || (create_template_203052).call((this), (ut_207414)));
		F.line = 826;
		var fragment_207471 = [imp_node_203444(this.ownerDocument, (info_207456.fragment))];
		F.line = 827;
		var updates_207489 = create_update_206988(fragment_207471, 0, (info_207456.paths));
		F.line = 828;
		known_200551[0].set(this, inner_207496());
		(update_one_207350).apply(updates_207489, arguments);
		F.line = 830;
		this.textContent = "";
		F.line = 831;
		this.appendChild(fragment_207471[0]);
	framePtr = F.prev;

	
}

function render_lit_199684(t_199686, tv_199688) {
		var Tmp1;
			var Tmp2;

	var result_207855 = null;

	var F={procname:"litz.renderLit",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 837;
		var existing_207857 = known_200551[0].get(this);
			if (!!((existing_207857 == null))) Tmp2 = false; else {				Tmp2 = (existing_207857["template"] == unique_201702(t_199686));			}		if (Tmp2) {
		Tmp1 = (update_one_207350).apply(existing_207857["updates"], arguments);
		}
		else {
		Tmp1 = (upgrade_207410).apply(this, arguments);
		}
		
		Tmp1;
		F.line = 842;
		result_207855 = this;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_207855;

}

function wire_content_207904(n_207906) {
							var Tmp4;
		var Tmp5;

	var result_207907 = null;

	var F={procname:"litz.wireContent",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 846;
		var child_nodes_207908 = nimCopy(null, n_207906.childNodes, NTI26450);
		F.line = 847;
		var wire_nodes_207918 = ([]);
		L1: do {
			F.line = 848;
			var child_207927 = null;
			F.line = 3964;
			var i_208471 = 0;
			F.line = 3965;
			var l_208473 = (child_nodes_207908 != null ? child_nodes_207908.length : 0);
			L2: do {
				F.line = 3966;
					L3: while (true) {
					if (!(i_208471 < l_208473)) break L3;
						F.line = 3967;
						child_207927 = child_nodes_207908[chckIndx(i_208471, 0, child_nodes_207908.length+0-1)-0];
							if ((child_207927.nodeType == 1)) Tmp4 = true; else {								Tmp4 = !((((trim_199667).call((child_207927.textContent)).length) == 0));							}						if (Tmp4) {
						wire_nodes_207918.push((child_207927));
						}
						
						F.line = 3968;
						i_208471 = addInt(i_208471, 1);
						if (!(((child_nodes_207908 != null ? child_nodes_207908.length : 0) == l_208473))) {
						F.line = 3969;
						failed_assert_impl_21480(makeNimstrLit("/root/.choosenim/toolchains/nim-#devel/lib/system.nim(3969, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 852;
		if (((wire_nodes_207918.length) == 1)) {
		Tmp5 = wire_nodes_207918[0];
		}
		else {
			F.line = 852;
		Tmp5 = (new wire_child_nodes_203462(wire_nodes_207918));
		}
		
		result_207907 = Tmp5;
	framePtr = F.prev;

	return result_207907;

}

function content_208020(kind_208022) {

		function HEX3Aanonymous_208032(s_208034) {
			var result_208035 = null;

			var F={procname:"content.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
			framePtr = F;
				F.line = 863;
				var u_208036 = unique_201702(s_208034);
				F.line = 864;
				var setup_208047 = !((temp_208030 == u_208036));
				if (setup_208047) {
				F.line = 866;
				temp_208030 = u_208036;
				F.line = 867;
				content_208029 = (fragment_199530(document));
				F.line = 868;
				container_208028 = content_208029;
				F.line = 869;
				updates_208031 = (render_lit_199684).bind(container_208028);
				}
				
				updates_208031.apply(null, arguments);
				if (setup_208047) {
				F.line = 872;
				wire_208027 = wire_content_207904((content_208029));
				}
				
				F.line = 873;
				result_208035 = wire_208027;
			framePtr = F.prev;

			return result_208035;

		}

	var result_208026 = null;

	var F={procname:"litz.content",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 856;
		var wire_208027 = null;
		F.line = 857;
		var container_208028 = null;
		F.line = 858;
		var content_208029 = null;
		F.line = 859;
		var temp_208030 = null;
		F.line = 860;
		var updates_208031 = null;
		F.line = 862;
		result_208026 = HEX3Aanonymous_208032;
	framePtr = F.prev;

	return result_208026;

}

function weakly_208095(obj_208097, kind_208098) {
	var result_208099 = null;

	var F={procname:"litz.weakly",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 876;
		var i_208123 = (kind_208098.indexOf((58)));
		F.line = 879;
		var w_208138 = wires_200594[0].get((obj_208097));
		F.line = 880;
		var id_208139 = kind_208098;
		F.line = 881;
		var tkind_208149 = (kind_208098);
		if ((-1 < i_208123)) {
		F.line = 884;
		id_208139 = kind_208098.slice((addInt(i_208123, 1)));
		F.line = 885;
		tkind_208149 = (kind_208098.slice((0), (i_208123))) || "html";
		}
		
		if ((w_208138 == null)) {
		F.line = 888;
		w_208138 = {};
		wires_200594[0].set((obj_208097), (w_208138));
		}
		
		if (!((w_208138[id_208139] == null))) {
		F.line = 892;
		result_208099 = w_208138[id_208139];
		break BeforeRet;
		}
		else {
			F.line = 894;
			result_208099 = (w_208138[id_208139] = content_208020(tkind_208149));
			break BeforeRet;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_208099;

}

function wire(obj_208264, kind_208265) {
		var Tmp1;
			var Tmp2;

	var result_208266 = null;

	var F={procname:"litz.wire",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		if ((obj_208264 == null)) {
		F.line = 901;
		if (!((kind_208265 == null))) {
		Tmp1 = content_208020((kind_208265));
		}
		else {
		Tmp1 = content_208020("html");
		}
		
		result_208266 = Tmp1;
		}
		else {
			F.line = 903;
			if (!((kind_208265 == null))) {
			Tmp2 = (weakly_208095(obj_208264, kind_208265));
			}
			else {
			Tmp2 = (weakly_208095(obj_208264, ("html")));
			}
			
			result_208266 = Tmp2;
		}
		
	framePtr = F.prev;

	return result_208266;

}

function setup_208479(content_208481) {

		function HEX3Aanonymous_208487(wm_208489, id_208490, component_208491) {
			var result_208492 = null;

			var F={procname:"setup.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				wm_208489.set((id_208490), (component_208491));
				F.line = 911;
				result_208492 = component_208491;
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_208492;

		}

		function HEX3Aanonymous_208528(c_208530, info_208531) {

				function inner_208539() {
					var result_208541 = null;

					var F={procname:":anonymous.inner",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/js/jsffi.nim",line:0};
					framePtr = F;
					BeforeRet: do {
						F.line = 423;
						var a_208542 = null;
						F.line = 424;
						a_208542 = {};
						F.line = 443;
						result_208541 = a_208542;
						break BeforeRet;
					} while (false);
					framePtr = F.prev;

					return result_208541;

				}

			var result_208532 = null;

			var F={procname:"setup.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 913;
				var relation_208556 = inner_208539();
				info_208531.set((c_208530), (relation_208556));
				F.line = 915;
				result_208532 = relation_208556;
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_208532;

		}

		function HEX3Aanonymous_208592(c_208594, info_208595, context_208596, id_208597) {
			var result_208598 = null;

			var F={procname:"setup.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 917;
				var relation_208613 = (info_208595.get((c_208594)) || relate_208591(c_208594, info_208595));
				F.line = 918;
				switch (toJSStr(cstrToNimstr(typeof(id_208597)))) {
				case "object":
				case "function":
					F.line = 920;
					var wm_208624 = (relation_208613.w || (relation_208613.w = new WeakMap()));
					F.line = 921;
					result_208598 = (wm_208624[id_208597] || create_entry_208527(wm_208624, id_208597, new c_208594(context_208596)));
					break BeforeRet;
					break;
				default: 
					F.line = 923;
					var sm_208625 = null;
					if (!((relation_208613.p == null))) {
					F.line = 925;
					sm_208625 = relation_208613.p;
					}
					else {
						F.line = 927;
						sm_208625 = (relation_208613.p = Object.create(null));
					}
					
					F.line = 929;
					result_208598 = (sm_208625[id_208597] || (sm_208625[id_208597] = new c_208594(context_208596)));
					break BeforeRet;
					break;
				}
			} while (false);
			framePtr = F.prev;

			return result_208598;

		}

		function HEX3Aanonymous_208666(ctx_208668) {
			var result_208669 = null;

			var F={procname:"setup.:anonymous",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 931;
				var info_208670 = new_map_199843();
				children_208482.set((ctx_208668), (info_208670));
				F.line = 933;
				result_208669 = info_208670;
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_208669;

		}

	var F={procname:"litz.setup",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 907;
		var children_208482 = new WeakMap();
		F.line = 909;
		var create_entry_208527 = HEX3Aanonymous_208487;
		F.line = 912;
		var relate_208591 = HEX3Aanonymous_208528;
		F.line = 916;
		var get_208665 = HEX3Aanonymous_208592;
		F.line = 930;
		var set_208705 = HEX3Aanonymous_208666;
	framePtr = F.prev;

	
}
setup_208479((content_208020));

function bindLit(e_208740) {
	var result_208741 = null;

	var F={procname:"litz.bindLit",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litz.nim",line:0};
	framePtr = F;
		F.line = 938;
		result_208741 = (render_lit_199684).bind((e_208740));
	framePtr = F.prev;

	return result_208741;

}

function escape_html_185032(html_185034, val_185035, escape_quotes_185036) {
	var result_185037 = null;

	var F={procname:"filters.escape_html",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litzpkg/filters.nim",line:0};
	framePtr = F;
		F.line = 10;
		result_185037 = nimCopy(null, html_185034, NTI138);
		L1: do {
			F.line = 12;
			var c_185039 = 0;
			F.line = 3982;
			var i_221609 = 0;
			F.line = 3983;
			var l_221611 = (val_185035 != null ? val_185035.length : 0);
			L2: do {
				F.line = 3984;
					L3: while (true) {
					if (!(i_221609 < l_221611)) break L3;
						F.line = 3985;
						c_185039 = val_185035[chckIndx(i_221609, 0, val_185035.length+0-1)-0];
						F.line = 13;
						switch (c_185039) {
						case 38:
							F.line = 14;
							if (result_185037 != null) { result_185037 = (result_185037).concat(makeNimstrLit("&amp;")); } else { result_185037 = makeNimstrLit("&amp;"); };
							break;
						case 60:
							F.line = 15;
							if (result_185037 != null) { result_185037 = (result_185037).concat(makeNimstrLit("&lt;")); } else { result_185037 = makeNimstrLit("&lt;"); };
							break;
						case 62:
							F.line = 16;
							if (result_185037 != null) { result_185037 = (result_185037).concat(makeNimstrLit("&gt;")); } else { result_185037 = makeNimstrLit("&gt;"); };
							break;
						case 34:
							if (escape_quotes_185036) {
							F.line = 18;
							if (result_185037 != null) { result_185037 = (result_185037).concat(makeNimstrLit("&quot;")); } else { result_185037 = makeNimstrLit("&quot;"); };
							}
							else {
								F.line = 19;
							if (result_185037 != null) { result_185037 = (result_185037).concat(makeNimstrLit("\"")); } else { result_185037 = makeNimstrLit("\""); };
							}
							
							break;
						case 39:
							if (escape_quotes_185036) {
							F.line = 21;
							if (result_185037 != null) { result_185037 = (result_185037).concat(makeNimstrLit("&#39;")); } else { result_185037 = makeNimstrLit("&#39;"); };
							}
							else {
								F.line = 22;
							if (result_185037 != null) { result_185037 = (result_185037).concat(makeNimstrLit("\'")); } else { result_185037 = makeNimstrLit("\'"); };
							}
							
							break;
						default: 
							F.line = 24;
							if (result_185037 != null) { addChar(result_185037, c_185039); } else { result_185037 = [c_185039]; };
							break;
						}
						F.line = 3986;
						i_221609 = addInt(i_221609, 1);
						if (!(((val_185035 != null ? val_185035.length : 0) == l_221611))) {
						F.line = 3987;
						failed_assert_impl_21480(makeNimstrLit("/root/.choosenim/toolchains/nim-#devel/lib/system.nim(3987, 11) `len(a) == L` string modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_185037;

}

function change_indentation_185053(html_185055, value_185056, indentation_185057) {
	var result_185058 = null;

	var F={procname:"filters.change_indentation",prev:framePtr,filename:"../../../../../../root/.nimble/pkgs/litz-0.1.0/litzpkg/filters.nim",line:0};
	framePtr = F;
		F.line = 29;
		result_185058 = nimCopy(null, html_185055, NTI138);
		F.line = 32;
		var in_indentation_185059 = false;
		F.line = 33;
		var initial_185060 = true;
		F.line = 34;
		var consumed_whitespace_185061 = false;
		L1: do {
			F.line = 36;
			var c_185063 = 0;
			F.line = 3982;
			var i_221615 = 0;
			F.line = 3983;
			var l_221617 = (value_185056 != null ? value_185056.length : 0);
			L2: do {
				F.line = 3984;
					L3: while (true) {
					if (!(i_221615 < l_221617)) break L3;
						F.line = 3985;
						c_185063 = value_185056[chckIndx(i_221615, 0, value_185056.length+0-1)-0];
						F.line = 37;
						switch (c_185063) {
						case 10:
							if (initial_185060) {
							F.line = 40;
							initial_185060 = false;
							F.line = 41;
							consumed_whitespace_185061 = true;
							}
							
							if (in_indentation_185059) {
							F.line = 43;
							if (result_185058 != null) { result_185058 = (result_185058).concat(makeNimstrLit("\x0A")); } else { result_185058 = makeNimstrLit("\x0A"); };
							}
							else {
								F.line = 45;
								in_indentation_185059 = true;
							}
							
							break;
						case 32:
							if (initial_185060) {
							F.line = 48;
							consumed_whitespace_185061 = true;
							}
							else {
								if (!(in_indentation_185059)) {
								F.line = 51;
								if (result_185058 != null) { result_185058 = (result_185058).concat(makeNimstrLit(" ")); } else { result_185058 = makeNimstrLit(" "); };
								}
								
							}
							
							break;
						default: 
							if (initial_185060) {
							F.line = 54;
							initial_185060 = false;
							if ((consumed_whitespace_185061 && !(in_indentation_185059))) {
							F.line = 56;
							if (result_185058 != null) { result_185058 = (result_185058).concat(makeNimstrLit(" ")); } else { result_185058 = makeNimstrLit(" "); };
							}
							
							}
							
							if (in_indentation_185059) {
							F.line = 58;
							if (result_185058 != null) { result_185058 = (result_185058).concat((makeNimstrLit("\x0A")).concat(indentation_185057)); } else { result_185058 = (makeNimstrLit("\x0A")).concat(indentation_185057).slice(); };
							F.line = 59;
							in_indentation_185059 = false;
							}
							
							F.line = 60;
							if (result_185058 != null) { addChar(result_185058, c_185063); } else { result_185058 = [c_185063]; };
							break;
						}
						F.line = 3986;
						i_221615 = addInt(i_221615, 1);
						if (!(((value_185056 != null ? value_185056.length : 0) == l_221617))) {
						F.line = 3987;
						failed_assert_impl_21480(makeNimstrLit("/root/.choosenim/toolchains/nim-#devel/lib/system.nim(3987, 11) `len(a) == L` string modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_185058;

}

function raiseRangeError() {
		var e_17124 = null;
		e_17124 = {m_type: NTI4262, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_17124.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_17124.parent = null;
		raiseException(e_17124, "RangeError");

	
}

function substr_24422(s_24424, first_24425, last_24426) {
	var result_24427 = null;

	var F={procname:"system.substr",prev:framePtr,filename:"../../../../../../root/.choosenim/toolchains/nim-#devel/lib/system.nim",line:0};
	framePtr = F;
		F.line = 4301;
		var first_24428 = nimMax(first_24425, 0);
		F.line = 4302;
		var l_24430 = nimMax(addInt(subInt(nimMin(last_24426, (s_24424 != null ? (s_24424.length-1) : -1)), first_24428), 1), 0);
		F.line = 4303;
		result_24427 = nimCopy(null, mnewString(chckRange(l_24430, 0, 2147483647)), NTI138);
		L1: do {
			F.line = 4304;
			var i_24442 = 0;
			F.line = 2139;
			var colontmp__221520 = 0;
			F.line = 4304;
			colontmp__221520 = subInt(l_24430, 1);
			F.line = 2142;
			var res_221522 = 0;
			L2: do {
				F.line = 2143;
					L3: while (true) {
					if (!(res_221522 <= colontmp__221520)) break L3;
						F.line = 2144;
						i_24442 = res_221522;
						F.line = 4305;
						result_24427[chckIndx(i_24442, 0, result_24427.length+0-1)-0] = s_24424[chckIndx(addInt(i_24442, first_24428), 0, s_24424.length+0-1)-0];
						F.line = 2145;
						res_221522 = addInt(res_221522, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_24427;

}
var tickerTempl = "";
var cache1_221586 = [[]];
var cache2_221588 = [[]];
var cache3_221590 = [[]];
if (cache3_221590[0] != null) { cache3_221590[0] = (cache3_221590[0]).concat(makeNimstrLit("<div data-key1=\"")); } else { cache3_221590[0] = makeNimstrLit("<div data-key1=\""); };
cache3_221590[0] = nimCopy(null, escape_html_185032(cache3_221590[0], makeNimstrLit("value1"), true), NTI138);
if (cache3_221590[0] != null) { cache3_221590[0] = (cache3_221590[0]).concat(makeNimstrLit("\" data-key2=\"")); } else { cache3_221590[0] = makeNimstrLit("\" data-key2=\""); };
cache3_221590[0] = nimCopy(null, escape_html_185032(cache3_221590[0], makeNimstrLit("value2"), true), NTI138);
if (cache3_221590[0] != null) { cache3_221590[0] = (cache3_221590[0]).concat(makeNimstrLit("\">\x0A    <h1>")); } else { cache3_221590[0] = makeNimstrLit("\">\x0A    <h1>"); };
cache1_221586[0].length = 0;
cache1_221586[0] = nimCopy(null, escape_html_185032(cache1_221586[0], makeNimstrLit("Hello, World!"), false), NTI138);
cache3_221590[0] = nimCopy(null, change_indentation_185053(cache3_221590[0], substr_24422(cache1_221586[0], 0, ((cache1_221586[0] != null ? cache1_221586[0].length : 0) - 1)), makeNimstrLit("        ")), NTI138);
if (cache3_221590[0] != null) { cache3_221590[0] = (cache3_221590[0]).concat(makeNimstrLit("</h1>\x0A    <h2>")); } else { cache3_221590[0] = makeNimstrLit("</h1>\x0A    <h2>"); };
cache1_221586[0].length = 0;
cache1_221586[0] = nimCopy(null, escape_html_185032(cache1_221586[0], makeNimstrLit("It is ${new Date().toLocaleTimeString()}."), false), NTI138);
cache3_221590[0] = nimCopy(null, change_indentation_185053(cache3_221590[0], substr_24422(cache1_221586[0], 0, ((cache1_221586[0] != null ? cache1_221586[0].length : 0) - 1)), makeNimstrLit("        ")), NTI138);
if (cache3_221590[0] != null) { cache3_221590[0] = (cache3_221590[0]).concat(makeNimstrLit("</h2>\x0A</div>\x0A")); } else { cache3_221590[0] = makeNimstrLit("</h2>\x0A</div>\x0A"); };
tickerTempl = toJSStr(cache3_221590[0]);
class Ticker{

constructor() {


this.tickerTempl = tickerTempl;

}
};
var t_221593 = [new Ticker()];

function tick_221619(r_221621) {
	var F={procname:"ktest.tick",prev:framePtr,filename:"ktest.nim",line:0};
	framePtr = F;
		tagTempl(r_221621, t_221593[0].tickerTempl);
	framePtr = F.prev;

	
}

function HEX3Aanonymous_221640() {
	var F={procname:"ktest.:anonymous",prev:framePtr,filename:"ktest.nim",line:0};
	framePtr = F;
		F.line = 16;
		tick_221619(bindLit(document.getElementById("root")));
	framePtr = F.prev;

	
}
window.setInterval(HEX3Aanonymous_221640, 10000);
var welcomeTempl = "";
var cache1_221690 = [[]];
var cache2_221692 = [[]];
var cache3_221694 = [[]];
if (cache3_221694[0] != null) { cache3_221694[0] = (cache3_221694[0]).concat(makeNimstrLit("<h1>")); } else { cache3_221694[0] = makeNimstrLit("<h1>"); };
cache1_221690[0].length = 0;
cache1_221690[0] = nimCopy(null, escape_html_185032(cache1_221690[0], makeNimstrLit("Hello, ${this.getAttribute(\'name\')}"), false), NTI138);
cache3_221694[0] = nimCopy(null, change_indentation_185053(cache3_221694[0], substr_24422(cache1_221690[0], 0, ((cache1_221690[0] != null ? cache1_221690[0].length : 0) - 1)), makeNimstrLit("    ")), NTI138);
if (cache3_221694[0] != null) { cache3_221694[0] = (cache3_221694[0]).concat(makeNimstrLit("</h1>\x0A")); } else { cache3_221694[0] = makeNimstrLit("</h1>\x0A"); };
welcomeTempl = toJSStr(cache3_221694[0]);
class Welcome extends HTMLElement{

constructor(...args) {
super(...args);

this.welcomeTempl = welcomeTempl;

this.html = bindLit(this);
}
connectedCallback() {
this.render();

}
render() {
return tagCustomElement(this.html, this.welcomeTempl, this);

}
};
customElements.define("h-welcome", Welcome, null);
